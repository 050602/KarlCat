{"version":3,"file":"LoginMain.js","sourceRoot":"","sources":["../../../src/servers/logic/LoginMain.ts"],"names":[],"mappings":";;AAAA,sEAAmE;AAEnE,mDAAgD;AAChD,6DAA0D;AAE1D,MAAqB,SAAU,SAAQ,iCAAe;IAE3C,MAAM,KAAK,QAAQ;QACtB,OAAO,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACxC,CAAC;IAEM,YAAY;QACf,qCAAqC;QACrC,6BAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAQ,CAAC,QAAQ,GAAG,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1E,+FAA+F;IACnG,CAAC;IAGM,eAAe;QAClB,6BAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,mBAAQ,CAAC,QAAQ,EAAE,IAAI,CAAE,CAAC;IAC5D,CAAC;IAED,qCAAqC;IACrC,IAAI,CAAC,GAAW;QACZ,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;IACjC,CAAC;IAED,aAAa;IACb,OAAO,CAAC,IAAS;QACb,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAA;IACpC,CAAC;;AAzBL,4BA0BC;AAzBiB,yBAAe,GAAG,WAAW,CAAC","sourcesContent":["import { BaseServerLogic } from \"../../components/BaseServerLogic\";\r\nimport { KalrEvent } from \"../../event/KalrEvent\";\r\nimport { RpcEvent } from \"../../event/RpcEvent\";\r\nimport { TSEventCenter } from \"../../utils/TSEventCenter\";\r\n\r\nexport default class LoginMain extends BaseServerLogic {\r\n    public static SigletonInsName = \"LoginMain\";\r\n    public static get Instance(): LoginMain {\r\n        return super.getInstance(LoginMain);\r\n    }\r\n\r\n    public initInstance(): void {\r\n        //接收后端服数据 ---注意，后端服只能接收到前端服的消息以及RPC消息\r\n        TSEventCenter.Instance.bind(RpcEvent.SayHello + \"100_1\", this, this.test);\r\n        // TSEventCenter.Instance.bind(KalrEvent.BackendServerDoFuntion + \"100_1\", this, this.backFun);\r\n    }\r\n\r\n\r\n    public destoryInstance(): void {\r\n        TSEventCenter.Instance.unbind(RpcEvent.SayHello, this,);\r\n    }\r\n\r\n    //romote是用于服务器间通讯的，因此，此处是来自Handler调用的\r\n    test(msg: string) {\r\n        console.log(\"test say \", msg)\r\n    }\r\n\r\n    //protobuf结构体\r\n    backFun(data: any) {\r\n        console.log(\"后端收到了穿透前端服传递过来的数据\")\r\n    }\r\n}"]}