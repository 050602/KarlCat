{"version":3,"file":"rpcSocketPool.js","sourceRoot":"","sources":["../../src/components/rpcSocketPool.ts"],"names":[],"mappings":";;;AAAA,6CAA8C;AAE9C,MAAa,aAAa;IAA1B;QACY,eAAU,GAAkC,EAAE,CAAC;IAuC3D,CAAC;IArCG;;OAEG;IACH,SAAS,CAAC,EAAU,EAAE,MAAmB;QACrC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC;QAC7B,IAAA,2BAAc,EAAC,EAAE,CAAC,CAAC;IACvB,CAAC;IAGD;;OAEG;IACH,YAAY,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAGD;;OAEG;IACH,OAAO,CAAC,EAAU,EAAE,GAAW;QAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACjC,IAAI,MAAM,EAAE;YACR,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;IACL,CAAC;IAED;;OAEG;IACH,SAAS,CAAC,EAAU;QAChB,mCAAmC;QACnC,kBAAkB;QAClB,IAAI;QAEJ,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;CACJ;AAxCD,sCAwCC","sourcesContent":["import { rpcOnNewSocket } from \"./rpcService\";\r\n\r\nexport class RpcSocketPool {\r\n    private rpcSockets: { [id: string]: I_RpcSocket } = {};\r\n\r\n    /**\r\n     * Add socket\r\n     */\r\n    addSocket(id: string, socket: I_RpcSocket) {\r\n        this.rpcSockets[id] = socket;\r\n        rpcOnNewSocket(id);\r\n    }\r\n\r\n\r\n    /**\r\n     * Remove socket\r\n     */\r\n    removeSocket(id: string) {\r\n        delete this.rpcSockets[id];\r\n    }\r\n\r\n\r\n    /**\r\n     * send messages\r\n     */\r\n    sendMsg(id: string, msg: Buffer) {\r\n        let socket = this.rpcSockets[id];\r\n        if (socket) {\r\n            socket.send(msg);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get socket\r\n     */\r\n    getSocket(id: string) {\r\n        // for (let i in this.rpcSockets) {\r\n        //     logInfo(i);\r\n        // }\r\n\r\n        return this.rpcSockets[id];\r\n    }\r\n}\r\n\r\nexport interface I_RpcSocket {\r\n    send(data: Buffer): void;\r\n}"]}