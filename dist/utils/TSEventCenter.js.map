{"version":3,"file":"TSEventCenter.js","sourceRoot":"","sources":["../../src/utils/TSEventCenter.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nexport class TSEventCenter {\r\n    private static _inst: TSEventCenter;\r\n    static get Instance() {\r\n        if (TSEventCenter._inst == null) {\r\n            TSEventCenter._inst = new TSEventCenter();\r\n            TSEventCenter._inst.initInstance();\r\n        }\r\n        return TSEventCenter._inst;\r\n    }\r\n    initInstance() {\r\n    }\r\n\r\n    private map: Map<string, any[]> = new Map();\r\n\r\n    public bind(name: string, thisobj: any, func: Function) {\r\n        let arr = this.map.get(name);\r\n        if (arr) {\r\n            let len = arr.length;\r\n            for (let i = 0; i < len; i++) {\r\n                if (arr[i][0] == func && arr[i][1] == thisobj) {\r\n                    // warningLog(\"重复注册事件\", name);\r\n                    return;\r\n                }\r\n            }\r\n        } else {\r\n            this.map.set(name, []);\r\n            arr = this.map.get(name);\r\n        }\r\n        arr?.push([func, thisobj]);\r\n    }\r\n\r\n\r\n    public unbind(name: string, thisobj: any) {\r\n        let arr = this.map.get(name);\r\n        if (arr) {\r\n            let len = arr.length;\r\n            for (let i = len - 1; i >= 0; i--) {\r\n                if (arr[i][1] == thisobj) {\r\n                    arr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        if (arr && arr.length == 0) {\r\n            this.map.delete(name);\r\n        }\r\n    }\r\n\r\n\r\n    public event(name: string, ...data: any[]): void {\r\n        let arr = this.map.get(name);\r\n        if (arr) {\r\n            for (let i = arr.length - 1; i >= 0; i--) {\r\n                let f: Function = arr[i][0];\r\n                f.apply(arr[i][1], data);\r\n            }\r\n        }\r\n    }\r\n\r\n    public async eventAsync(name: string, ...data: any[]): Promise<any[]> {\r\n        let arr = this.map.get(name);\r\n        let reArr = [];\r\n        if (arr) {\r\n            let promiseArr = [];\r\n            for (let i = arr.length - 1; i >= 0; i--) {\r\n                let f: Function = arr[i][0];\r\n                promiseArr.push(f.apply(arr[i][1], data));\r\n            }\r\n            reArr = await Promise.all(promiseArr);\r\n        }\r\n        return reArr;\r\n    }\r\n\r\n}"]}