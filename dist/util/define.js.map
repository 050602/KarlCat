{"version":3,"file":"define.js","sourceRoot":"","sources":["../../src/util/define.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACQ,QAAA,WAAW,GAAG;IACrB,IAAI,EAAE;QACF,sBAAsB,EAAE,CAAC;QACzB,uBAAuB,EAAE,EAAE;QAC3B,+BAA+B,EAAE,EAAE;QAEnC,kBAAkB,EAAE,CAAC;QACrB,mBAAmB,EAAE,EAAE;QACvB,2BAA2B,EAAE,EAAE;KAClC;IACD,QAAQ,EAAE;QACN,OAAO,EAAE,SAAS;QAClB,MAAM,EAAE,kBAAkB;KAC7B;IACD,YAAY,EAAE,sBAAsB;IACpC,SAAS,EAAE,aAAa;IACxB,4BAA4B,EAAE,IAAI;IAClC,kBAAkB,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI;CACvC,CAAA","sourcesContent":["/**\r\n * Some default configurations\r\n */\r\nexport let some_config = {\r\n    Time: {\r\n        Monitor_Reconnect_Time: 2,\r\n        Monitor_Heart_Beat_Time: 60,\r\n        Monitor_Heart_Beat_Timeout_Time: 10,\r\n\r\n        Rpc_Reconnect_Time: 2,\r\n        Rpc_Heart_Beat_Time: 60,\r\n        Rpc_Heart_Beat_Timeout_Time: 10,\r\n    },\r\n    File_Dir: {\r\n        Servers: \"servers\",\r\n        Config: \"serverConfig/sys\"\r\n    },\r\n    Server_Token: \"hi,i am inner server\",\r\n    Cli_Token: \"hi,i am cli\",\r\n    SocketBufferMaxLenUnregister: 1024, // Unregistered socket, maximum message length\r\n    SocketBufferMaxLen: 32 * 1024 * 1024\r\n}\r\n\r\n/**\r\n * master to monitor, message type\r\n */\r\nexport const enum Master_To_Monitor {\r\n    addServer = 1,\r\n    removeServer = 2,\r\n    cliMsg = 3,\r\n    heartbeatResponse = 4\r\n}\r\n\r\n/**\r\n * monitor to master, message type\r\n */\r\nexport const enum Monitor_To_Master {\r\n    register = 1,\r\n    heartbeat = 2,\r\n    cliMsg = 3\r\n}\r\n\r\n/**\r\n * cli to master, message type\r\n */\r\nexport const enum Cli_To_Master {\r\n    register = 1,\r\n    heartbeat = 2,\r\n    cliMsg = 3\r\n}\r\n\r\n/**\r\n * client to server, message type\r\n */\r\nexport const enum Client_To_Server {\r\n    msg = 1,\r\n    handshake = 2,\r\n    heartbeat = 3,\r\n}\r\n\r\n/**\r\n * server to client, message type\r\n */\r\nexport const enum Server_To_Client {\r\n    msg = 1,\r\n    handshake = 2,\r\n    heartbeatResponse = 3\r\n}\r\n\r\n/**\r\n * Internal user server message type\r\n */\r\nexport const enum Rpc_Msg {\r\n    register = 1,           // registered\r\n    heartbeat = 2,          // heartbeat\r\n    applySession = 3,       // Synchronize session from backend to frontend\r\n    clientMsgIn = 4,        // Client message received\r\n    clientMsgOut = 5,       // Send a message to the client\r\n    rpcMsg = 6,              // rpc message\r\n    rpcMsgAwait = 7,              // rpc message await\r\n}"]}