{"version":3,"file":"starter.js","sourceRoot":"","sources":["../../src/util/starter.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { Application } from \"../application\";\r\nimport * as cp from \"child_process\"\r\nimport * as util from \"util\"\r\nimport * as os from \"os\"\r\nimport { ServerInfo } from \"../util/interfaceDefine\";\r\nimport { errLog } from \"../LogTS\";\r\n\r\nlet app: Application = null as any;\r\n\r\nexport function runServers(_app: Application) {\r\n    app = _app;\r\n    let servers = app.serversConfig;\r\n    let server: ServerInfo;\r\n    for (let serverType in servers) {\r\n        let serverTypes = servers[serverType];\r\n        for (let i = 0; i < serverTypes.length; i++) {\r\n            server = serverTypes[i];\r\n            run(server);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction run(server: ServerInfo, cb?: Function) {\r\n    let cmd, key;\r\n    if (isLocal(server.host)) {\r\n        let options: any[] = [];\r\n        if (!!server.args) {\r\n            if (typeof server.args === 'string') {\r\n                options.push(server.args.trim());\r\n            } else {\r\n                options = options.concat(server.args);\r\n            }\r\n        }\r\n        cmd = app.main;\r\n        options.push(cmd);\r\n        options.push(util.format('serverName=%s', server.serverName));\r\n        options.push(util.format('env=%s', app.env));\r\n        options.push(util.format('startMode=%s', app.startMode));\r\n        localrun(process.execPath, \"\", options, cb);\r\n    } else {\r\n        cmd = util.format('cd \"%s\" && \"%s\"', app.base, process.execPath);\r\n        var arg = server.args;\r\n        if (arg !== undefined) {\r\n            cmd += arg;\r\n        }\r\n        cmd += util.format(' \"%s\" serverName=%s env=%s startMode=%s', app.main, server.serverName, app.env, app.startMode);\r\n        sshrun(cmd, server.host, cb);\r\n    }\r\n};\r\n\r\nfunction sshrun(cmd: string, host: string, cb?: Function) {\r\n    let args = [];\r\n    args.push(host);\r\n    let ssh_params = app.someconfig.ssh;\r\n    if (!!ssh_params && Array.isArray(ssh_params)) {\r\n        args = args.concat(ssh_params);\r\n    }\r\n    args.push(cmd);\r\n    spawnProcess(\"ssh\", host, args, cb);\r\n};\r\n\r\nfunction localrun(cmd: string, host: string, options: string[], callback?: Function) {\r\n    spawnProcess(cmd, host, options, callback);\r\n};\r\n\r\nfunction spawnProcess(command: string, host: string, options: string[], cb?: Function) {\r\n    let child = null;\r\n\r\n    if (app.isDaemon) {\r\n        child = cp.spawn(command, options, { detached: true, stdio: 'ignore' });\r\n        child.unref();\r\n    } else {\r\n        child = cp.spawn(command, options);\r\n        let prefix = command === \"ssh\" ? '[' + host + '] ' : '';\r\n\r\n        child.stderr.on('data', function (chunk) {\r\n            let msg = chunk.toString();\r\n            process.stderr.write(msg);\r\n            if (!!cb) {\r\n                cb(msg);\r\n            }\r\n        });\r\n\r\n        child.stdout.on('data', function (chunk) {\r\n            let msg = prefix + chunk.toString();\r\n            process.stdout.write(msg);\r\n        });\r\n    }\r\n\r\n    child.on('exit', function (code) {\r\n        if (code !== 0) {\r\n            errLog('child process exit with error, error code: %s, executed command: %s', code, command);\r\n        }\r\n        if (typeof cb === 'function') {\r\n            cb(code === 0 ? null : code);\r\n        }\r\n    });\r\n};\r\n\r\nlet isLocal = function (host: string) {\r\n    return host === '127.0.0.1' || host === 'localhost' || host === '0.0.0.0' || inLocal(host);\r\n};\r\n\r\nlet inLocal = function (host: string) {\r\n    return localIps.indexOf(host) !== -1;\r\n};\r\n\r\nlet localIps = function () {\r\n    let ifaces = os.networkInterfaces();\r\n    let ips: string[] = [];\r\n    let func = function (details: any) {\r\n        if (details.family === 'IPv4') {\r\n            ips.push(details.address);\r\n        }\r\n    };\r\n    for (let dev in ifaces) {\r\n        ifaces[dev].forEach(func);\r\n    }\r\n    return ips;\r\n}();\r\n"]}