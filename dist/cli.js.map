{"version":3,"file":"cli.js","sourceRoot":"","sources":["../src/cli.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\r\n\r\nimport * as path from \"path\";\r\nimport * as fs from \"fs\";\r\nimport * as readline from \"readline\";\r\nimport { spawn } from \"child_process\";\r\nimport * as define from \"./util/define\";\r\nimport * as msgCoder from \"./components/msgCoder\";\r\nimport { TcpClient } from \"./components/tcpClient\";\r\nimport { errLog, logInfo } from \"./LogTS\";\r\nconst BSON = require('bson');\r\nconst Long = BSON.Long;\r\n\r\n\r\n\r\nlet version = require('../package.json').version;\r\nlet DEFAULT_MASTER_HOST = '127.0.0.1';\r\nlet DEFAULT_MASTER_PORT = 3005;\r\nlet FILEREAD_ERROR = 'Fail to read the file, please check if the application is started legally.';\r\n\r\n\r\nclass clientProxy {\r\n    reqId: number = 1;\r\n    reqs: { [reqId: number]: { \"cb\": Function, \"timeOut\": NodeJS.Timer } } = {};\r\n    socket: TcpClient;\r\n    token: string;\r\n    connect_cb: Function;\r\n    private needAbort = true;\r\n    private heartbeatTimeout: NodeJS.Timeout = null as any;\r\n    constructor(host: string, port: number, token: string, cb: Function) {\r\n        this.token = token;\r\n        this.connect_cb = cb;\r\n\r\n        this.socket = new TcpClient(port, host, define.some_config.SocketBufferMaxLen, true, this.connectCb.bind(this));\r\n\r\n        this.socket.on(\"data\", (buf: Buffer) => {\r\n            // console.log(\"what the fuck222222222222222222\");\r\n            let data = BSON.deserialize(buf);\r\n            let reqId = data.reqId;\r\n            let req = this.reqs[reqId];\r\n            if (!req) {\r\n                return;\r\n            }\r\n            delete this.reqs[reqId];\r\n            clearTimeout(req.timeOut);\r\n            req.cb(null, data.msg);\r\n        });\r\n\r\n        this.socket.on(\"close\", (err: any) => {\r\n            clearTimeout(this.heartbeatTimeout);\r\n            if (this.needAbort) {\r\n                abort(err);\r\n            }\r\n        });\r\n    }\r\n\r\n    private connectCb() {\r\n        // register\r\n        let loginInfo = {\r\n            T: define.Cli_To_Master.register,\r\n            cliToken: this.token\r\n        };\r\n        let data1 = JSON.stringify(loginInfo);\r\n        let data2 = JSON.parse(data1);\r\n        let loginInfo_buf = msgCoder.encodeInnerData(data2);\r\n        this.socket.send(loginInfo_buf);\r\n        // console.log(\"connectCb\", loginInfo_buf);\r\n        this.heartbeat();\r\n        this.connect_cb(this);\r\n    }\r\n\r\n    private heartbeat() {\r\n        let self = this;\r\n        this.heartbeatTimeout = setTimeout(function () {\r\n            let heartBeatMsg = { T: define.Cli_To_Master.heartbeat };\r\n            let heartBeatMsg_buf = msgCoder.encodeInnerData(heartBeatMsg);\r\n            self.socket.send(heartBeatMsg_buf);\r\n            self.heartbeat();\r\n        }, define.some_config.Time.Monitor_Heart_Beat_Time * 1000)\r\n    }\r\n\r\n    request(msg: any, timeout: number, cb: (err: string, ...args: any[]) => void) {\r\n        let reqId = this.reqId++;\r\n        let data = { \"T\": define.Cli_To_Master.cliMsg, \"reqId\": reqId, \"msg\": msg };\r\n        let str = JSON.stringify(data);\r\n        let data2 = JSON.parse(str);\r\n        let buf = msgCoder.encodeInnerData(data2);\r\n        this.socket.send(buf);\r\n\r\n        let self = this;\r\n        this.reqs[reqId] = {\r\n            \"cb\": cb,\r\n            \"timeOut\": setTimeout(function () {\r\n                delete self.reqs[reqId];\r\n                cb(\"time out\");\r\n            }, timeout * 1000)\r\n        };\r\n\r\n    }\r\n\r\n    close(needAbort = true) {\r\n        this.needAbort = needAbort;\r\n        this.socket.close();\r\n    }\r\n}\r\n\r\n\r\nclass Commond {\r\n    private baseName: string = \"\";\r\n    private ver: string = \"\";\r\n    private cmdArr: I_commond[] = [];\r\n    setNameVersion(baseName: string, ver: string) {\r\n        this.baseName = baseName;\r\n        this.ver = ver;\r\n    }\r\n    addCommond(cmd: I_commond) {\r\n        for (let one of this.cmdArr) {\r\n            if (one.name === cmd.name) {\r\n                console.log(`\\n   Error: [Cmd already exists] cmd -> ${cmd.name}\\n`);\r\n                process.exit();\r\n            }\r\n        }\r\n        for (let i = 0; i < cmd.options.length; i++) {\r\n            let one = cmd.options[i];\r\n            for (let j = i + 1; j < cmd.options.length; j++) {\r\n                let two = cmd.options[j];\r\n                if (two.opt === one.opt) {\r\n                    console.log(`\\n   Error: [Option.opt already exists] cmd -> ${cmd.name}, opt -> ${one.opt}\\n`);\r\n                    process.exit();\r\n                }\r\n                if (two.name === one.name) {\r\n                    console.log(`\\n   Error: [Option.name already exists] cmd -> ${cmd.name}, name -> ${one.name}\\n`);\r\n                    process.exit();\r\n                }\r\n            }\r\n        }\r\n        this.cmdArr.push(cmd);\r\n    }\r\n\r\n    parse() {\r\n        let argvArr = [...process.argv];\r\n        argvArr.splice(0, 2);\r\n        if (!argvArr.length) {\r\n            this.print_help();\r\n            return;\r\n        }\r\n        let cmdName = argvArr[0];\r\n        if ([\"-h\", \"-H\", \"--help\"].includes(cmdName)) {\r\n            this.print_help();\r\n            return;\r\n        }\r\n        if ([\"-v\", \"-V\", \"--version\"].includes(cmdName)) {\r\n            console.log(`\\n   Version: ${this.ver}\\n`);\r\n            return;\r\n        }\r\n        if (cmdName === \"des\") {\r\n            this.print_des(argvArr[1]);\r\n            return;\r\n        }\r\n        this.parseCmd(cmdName, argvArr);\r\n    }\r\n\r\n    private parseCmd(cmdName: string, argvArr: string[]) {\r\n        let cmd: I_commond = null as any;\r\n        for (let one of this.cmdArr) {\r\n            if (one.name === cmdName) {\r\n                cmd = one;\r\n                break;\r\n            }\r\n        }\r\n        if (!cmd) {\r\n            console.log(`\\n   Error: [Cmd not exists] ${cmdName}\\n`);\r\n            return;\r\n        }\r\n        if (argvArr.includes(\"--help\")) {\r\n            this.print_des(cmdName);\r\n            return;\r\n        }\r\n        let keyDic: { [key: string]: any } = {};\r\n        let otherArr: string[] = [];\r\n        for (let i = 1; i < argvArr.length;) {\r\n            let str = argvArr[i];\r\n            if (!str.startsWith(\"-\")) {\r\n                otherArr.push(str);\r\n                i += 1;\r\n                continue;\r\n            }\r\n            let option: I_option = null as any;\r\n            for (let one of cmd.options) {\r\n                if (one.opt === str) {\r\n                    option = one;\r\n                    break;\r\n                }\r\n            }\r\n            if (!option) {\r\n                console.log(`\\n   Error: [No such option] ${str}\\n`);\r\n                process.exit();\r\n            }\r\n            if (option.type === \"bool\") {\r\n                keyDic[option.name] = true;\r\n                i += 1;\r\n                continue;\r\n            }\r\n            if (option.type === \"string\") {\r\n                let str2 = argvArr[i + 1];\r\n                if (!str2 || str2.startsWith(\"-\")) {\r\n                    console.log(`\\n   Error: [Wrong option input] ${str} ${str2 || \"\"}\\n`);\r\n                    process.exit();\r\n                }\r\n                keyDic[option.name] = str2;\r\n                i += 2;\r\n                continue;\r\n            }\r\n            if (option.type === \"number\") {\r\n                let str2 = argvArr[i + 1];\r\n                if (!str2 || str2.startsWith(\"-\")) {\r\n                    console.log(`\\n   Error: [Wrong option input] ${str} ${str2 || \"\"}\\n`);\r\n                    process.exit();\r\n                }\r\n                let numVal = Number(str2);\r\n                if (isNaN(numVal)) {\r\n                    console.log(`\\n   Error: [Wrong option input] ${str} ${str2 || \"\"}\\n`);\r\n                    process.exit();\r\n                }\r\n                keyDic[option.name] = numVal;\r\n                i += 2;\r\n                continue;\r\n            }\r\n        }\r\n\r\n        for (let one of cmd.options) {\r\n            if (keyDic[one.name] !== undefined) {\r\n                continue;\r\n            }\r\n            if (one.type === \"bool\") {\r\n                continue;\r\n            }\r\n            if (one.mustNeed) {\r\n                console.log(`\\n   Error: [Need option] ${one.opt}\\n`);\r\n                process.exit();\r\n            } else if (one.default !== undefined) {\r\n                keyDic[one.name] = one.default;\r\n            }\r\n        }\r\n        cmd.cb(keyDic, otherArr);\r\n    }\r\n\r\n    private print_help() {\r\n        console.log(\"\");\r\n        console.log(` Version: ${this.ver}`);\r\n        console.log(\" Usage:\")\r\n        let defaultArr: string[][] = [];\r\n        defaultArr.push([\"-v\", \"show the version\"]);\r\n        defaultArr.push([\"-h\", \"list the commonds\"]);\r\n        defaultArr.push([\"des [command]\", \"describe the command\"]);\r\n        this.printArr(defaultArr);\r\n\r\n        console.log(\"\\n Commands:\");\r\n        let arr: string[][] = [];\r\n        for (let one of this.cmdArr) {\r\n            arr.push([one.name + (one.options.length ? \" [options]\" : \"\"), one.des]);\r\n        }\r\n        this.printArr(arr);\r\n        console.log(\"\");\r\n    }\r\n\r\n    private print_des(cmdName: string) {\r\n        let cmd: I_commond = null as any;\r\n        for (let one of this.cmdArr) {\r\n            if (one.name === cmdName) {\r\n                cmd = one;\r\n                break;\r\n            }\r\n        }\r\n        if (!cmd) {\r\n            console.log(`\\n   Error: [Cmd not exists] cmd -> ${cmdName}\\n`);\r\n            return;\r\n        }\r\n        console.log(``);\r\n        console.log(` Cmd: ${this.baseName} ${cmd.name}`);\r\n        console.log(` Des: ${cmd.des}`);\r\n        if (cmd.usage) {\r\n            console.log(` Usage: ${cmd.usage}`);\r\n        }\r\n        console.log(` Options:`);\r\n\r\n        let arr: string[][] = [];\r\n        for (let one of cmd.options) {\r\n            let tmpDes = one.des;\r\n            if (!one.mustNeed && one.type !== \"bool\" && one.default !== undefined) {\r\n                if (one.type === \"string\") {\r\n                    tmpDes += ` (default: \"${one.default}\")`;\r\n                } else {\r\n                    tmpDes += ` (default: ${one.default})`;\r\n                }\r\n            }\r\n            arr.push([one.opt, one.type === \"bool\" ? \"\" : `${one.name} [${one.type}]`, tmpDes, one.mustNeed ? \"√\" : \"\"])\r\n        }\r\n        this.printArr(arr);\r\n        console.log(\"\");\r\n    }\r\n\r\n\r\n    private printArr(arr: string[][]) {\r\n        let widthArr: number[][] = [];\r\n        let maxWidthArr: number[] = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let one = arr[i];\r\n            let tmpArr: number[] = [];\r\n            for (let j = 0; j < one.length; j++) {\r\n                let len = this.getDisplayLength(one[j]);\r\n                tmpArr.push(len);\r\n                if (len >= (maxWidthArr[j] || 0)) {\r\n                    maxWidthArr[j] = len;\r\n                }\r\n            }\r\n            widthArr.push(tmpArr);\r\n        }\r\n        for (let i = 0; i < maxWidthArr.length; i++) {\r\n            maxWidthArr[i] += 5;\r\n        }\r\n        for (let i = 0; i < arr.length; i++) {\r\n            for (let j = 0; j < arr[i].length; j++) {\r\n                arr[i][j] += \" \".repeat(maxWidthArr[j] - widthArr[i][j]);\r\n            }\r\n            console.log(\"   \", arr[i].join(\"\"));\r\n        }\r\n\r\n    }\r\n\r\n    private getDisplayLength(str: string) {\r\n        let realLength = 0, len = str.length, charCode = -1;\r\n        for (var i = 0; i < len; i++) {\r\n            charCode = str.charCodeAt(i);\r\n            if (charCode >= 0 && charCode <= 128) {\r\n                realLength += 1;\r\n            } else {\r\n                realLength += 2;\r\n            }\r\n\r\n        }\r\n        return realLength;\r\n    }\r\n}\r\n\r\n\r\ninterface I_commond {\r\n    /** 名称 */\r\n    \"name\": string,\r\n    /** 描述 */\r\n    \"des\": string,\r\n    /** 选项 */\r\n    \"options\": I_option[],\r\n    /** 使用示例 */\r\n    \"usage\": string,\r\n    /** 回调 */\r\n    \"cb\": (opts: any, argv: string[]) => void\r\n}\r\n\r\ninterface I_option {\r\n    /** 关键值（必须以\"-\"开头） */\r\n    \"opt\": string,\r\n    /** 名字 */\r\n    \"name\": string,\r\n    /** 描述 */\r\n    \"des\": string,\r\n    /** 是否是必选项 */\r\n    \"mustNeed\": boolean,\r\n    /** 类型 */\r\n    \"type\": \"bool\" | \"string\" | \"number\"\r\n    /** 默认值 */\r\n    \"default\"?: number | string,\r\n}\r\n\r\nlet commond = new Commond();\r\ncommond.setNameVersion(\"mydog\", version);\r\n\r\ncommond.addCommond({\r\n    \"name\": \"init\",\r\n    \"des\": \"create a new application\",\r\n    \"options\": [],\r\n    \"usage\": \"\",\r\n    \"cb\": () => {\r\n        init();\r\n    }\r\n});\r\n\r\ncommond.addCommond({\r\n    \"name\": \"start\",\r\n    \"des\": \"start the application\",\r\n    \"options\": [\r\n        { \"opt\": \"-e\", \"name\": \"env\", \"des\": \"the used environment\", \"mustNeed\": false, \"type\": \"string\", \"default\": \"development\" },\r\n        { \"opt\": \"-d\", \"name\": \"daemon\", \"des\": \"enable the daemon start\", \"mustNeed\": false, \"type\": \"bool\" },\r\n    ],\r\n    \"usage\": \"mydog start -e env [serverId-1 ...]\",\r\n    \"cb\": (opts: { \"env\": string, \"daemon\": boolean, \"serverIds\": string[] }, argv) => {\r\n        opts.serverIds = argv;\r\n        start(opts);\r\n    }\r\n});\r\n\r\ncommond.addCommond({\r\n    \"name\": \"list\",\r\n    \"des\": \"list the servers\",\r\n    \"options\": [\r\n        { \"opt\": \"-h\", \"name\": \"host\", \"des\": \"master server host\", \"mustNeed\": false, \"type\": \"string\", \"default\": DEFAULT_MASTER_HOST },\r\n        { \"opt\": \"-p\", \"name\": \"port\", \"des\": \"master server port\", \"mustNeed\": false, \"type\": \"number\", \"default\": DEFAULT_MASTER_PORT },\r\n        { \"opt\": \"-t\", \"name\": \"token\", \"des\": \"cli token\", \"mustNeed\": false, \"type\": \"string\", \"default\": define.some_config.Cli_Token },\r\n        { \"opt\": \"-i\", \"name\": \"interval\", \"des\": \"request interval\", \"mustNeed\": false, \"type\": \"number\", \"default\": 5 },\r\n    ],\r\n    \"usage\": \"\",\r\n    \"cb\": (opts: { \"host\": string, \"port\": number, \"token\": string, \"interval\": number }) => {\r\n        list(opts);\r\n    }\r\n});\r\n\r\ncommond.addCommond({\r\n    \"name\": \"stop\",\r\n    \"des\": \"stop the servers\",\r\n    \"options\": [\r\n        { \"opt\": \"-h\", \"name\": \"host\", \"des\": \"master server host\", \"mustNeed\": false, \"type\": \"string\", \"default\": DEFAULT_MASTER_HOST },\r\n        { \"opt\": \"-p\", \"name\": \"port\", \"des\": \"master server port\", \"mustNeed\": false, \"type\": \"number\", \"default\": DEFAULT_MASTER_PORT },\r\n        { \"opt\": \"-t\", \"name\": \"token\", \"des\": \"cli token\", \"mustNeed\": false, \"type\": \"string\", \"default\": define.some_config.Cli_Token },\r\n    ],\r\n    \"usage\": \"\",\r\n    \"cb\": (opts: { \"host\": string, \"port\": number, \"token\": string }) => {\r\n        stop(opts);\r\n    }\r\n});\r\n\r\ncommond.addCommond({\r\n    \"name\": \"remove\",\r\n    \"des\": \"remove some servers\",\r\n    \"options\": [\r\n        { \"opt\": \"-h\", \"name\": \"host\", \"des\": \"master server host\", \"mustNeed\": false, \"type\": \"string\", \"default\": DEFAULT_MASTER_HOST },\r\n        { \"opt\": \"-p\", \"name\": \"port\", \"des\": \"master server port\", \"mustNeed\": false, \"type\": \"number\", \"default\": DEFAULT_MASTER_PORT },\r\n        { \"opt\": \"-t\", \"name\": \"token\", \"des\": \"cli token\", \"mustNeed\": false, \"type\": \"string\", \"default\": define.some_config.Cli_Token },\r\n    ],\r\n    \"usage\": \"mydog remove serverId-1 [serverId-2 ...]\",\r\n    \"cb\": (opts: { \"host\": string, \"port\": number, \"token\": string, \"serverIds\": string[] }, argv) => {\r\n        opts.serverIds = argv;\r\n        remove(opts);\r\n    }\r\n});\r\n\r\ncommond.addCommond({\r\n    \"name\": \"removeT\",\r\n    \"des\": \"remove some serverTypes\",\r\n    \"options\": [\r\n        { \"opt\": \"-h\", \"name\": \"host\", \"des\": \"master server host\", \"mustNeed\": false, \"type\": \"string\", \"default\": DEFAULT_MASTER_HOST },\r\n        { \"opt\": \"-p\", \"name\": \"port\", \"des\": \"master server port\", \"mustNeed\": false, \"type\": \"number\", \"default\": DEFAULT_MASTER_PORT },\r\n        { \"opt\": \"-t\", \"name\": \"token\", \"des\": \"cli token\", \"mustNeed\": false, \"type\": \"string\", \"default\": define.some_config.Cli_Token },\r\n    ],\r\n    \"usage\": \"mydog removeT serverType-1 [serverType-2 ...]\",\r\n    \"cb\": (opts: { \"host\": string, \"port\": number, \"token\": string, \"serverTypes\": string[] }, argv) => {\r\n        opts.serverTypes = argv;\r\n        removeT(opts);\r\n    }\r\n});\r\n\r\ncommond.addCommond({\r\n    \"name\": \"cmd\",\r\n    \"des\": \"build cmd file\",\r\n    \"options\": [],\r\n    \"usage\": \"mydog cmd [ts cs ...]\",\r\n    \"cb\": (opts, argv) => {\r\n        cmd(argv);\r\n    }\r\n});\r\n\r\ncommond.addCommond({\r\n    \"name\": \"send\",\r\n    \"des\": \"send msg to mydog\",\r\n    \"options\": [\r\n        { \"opt\": \"-h\", \"name\": \"host\", \"des\": \"master server host\", \"mustNeed\": false, \"type\": \"string\", \"default\": DEFAULT_MASTER_HOST },\r\n        { \"opt\": \"-p\", \"name\": \"port\", \"des\": \"master server port\", \"mustNeed\": false, \"type\": \"number\", \"default\": DEFAULT_MASTER_PORT },\r\n        { \"opt\": \"-t\", \"name\": \"token\", \"des\": \"cli token\", \"mustNeed\": false, \"type\": \"string\", \"default\": define.some_config.Cli_Token },\r\n        { \"opt\": \"-id\", \"name\": \"serverId\", \"des\": \"serverId will get msg\", \"mustNeed\": false, \"type\": \"string\" },\r\n        { \"opt\": \"-svrT\", \"name\": \"serverType\", \"des\": \"serverType will get msg\", \"mustNeed\": false, \"type\": \"string\" },\r\n    ],\r\n    \"usage\": \"mydog send [-id id1,id2] [-svrT svrT1,svrT2] [argv0 argv1...]\",\r\n    \"cb\": (opts: { \"host\": string, \"port\": number, \"token\": string, \"serverId\": string, \"serverType\": string }, argv) => {\r\n        send(opts, argv);\r\n    }\r\n});\r\n\r\n\r\ncommond.parse();\r\n\r\n\r\n\r\nfunction abort(str: string = \"\") {\r\n    errLog(str);\r\n    process.exit(1);\r\n}\r\n\r\n\r\nfunction init() {\r\n    let pathStr = process.cwd();\r\n    emptyDirectory(pathStr, function (empty) {\r\n        if (empty) {\r\n            createApplicationAt(pathStr);\r\n        } else {\r\n            confirm('Destination is not empty, continue? (y/n) [no]   ', function (force) {\r\n                if (force) {\r\n                    createApplicationAt(pathStr);\r\n                } else {\r\n                    abort('[ canceled ]');\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    function createApplicationAt(ph: string) {\r\n        copy(path.join(__dirname, '../template'), ph);\r\n\r\n        function copy(origin: string, target: string) {\r\n            if (!fs.existsSync(origin)) {\r\n                abort(origin + 'does not exist.');\r\n            }\r\n            if (!fs.existsSync(target)) {\r\n                fs.mkdirSync(target);\r\n                console.log('   create :  ' + target);\r\n            }\r\n            fs.readdir(origin, function (err, datalist) {\r\n                if (err) {\r\n                    abort(FILEREAD_ERROR);\r\n                }\r\n                for (let i = 0; i < datalist.length; i++) {\r\n                    let oCurrent = path.resolve(origin, datalist[i]);\r\n                    let tCurrent = path.resolve(target, datalist[i]);\r\n                    if (fs.statSync(oCurrent).isFile()) {\r\n                        console.error(\"此处ahuang的代码已被注释\");\r\n                        // fs.writeFileSync(tCurrent, fs.readFileSync(oCurrent, ''), '');\r\n                        // console.log('   create :  ' + tCurrent);\r\n                    } else if (fs.statSync(oCurrent).isDirectory()) {\r\n                        copy(oCurrent, tCurrent);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function emptyDirectory(path: string, fn: (isEmpth: boolean) => void) {\r\n        fs.readdir(path, function (err, files) {\r\n            if (err && 'ENOENT' !== err.code) {\r\n                abort(FILEREAD_ERROR);\r\n            }\r\n            fn(!files || !files.length);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nfunction confirm(msg: string, fn: (yes: boolean) => void) {\r\n    prompt(msg, function (val) {\r\n        val = val.trim().toLowerCase();\r\n        fn(val === \"y\" || val === \"yes\");\r\n    });\r\n    function prompt(msg: string, fn: (data: string) => void) {\r\n        console.log(msg);\r\n        process.stdin.setEncoding('ascii');\r\n        process.stdin.once('data', function (data) {\r\n            process.stdin.destroy();\r\n            fn(data.toString());\r\n        }).resume();\r\n    }\r\n}\r\n\r\n\r\nfunction start(opts: { \"env\": string, \"daemon\": boolean, \"serverIds\": string[] }) {\r\n\r\n    let absScript = path.resolve(process.cwd(), 'app.js');\r\n    if (!fs.existsSync(absScript)) {\r\n        abort(\"  ->  Not find the script: \" + absScript);\r\n    }\r\n    opts.env = opts.env || \"development\";\r\n    opts.daemon = !!opts.daemon;\r\n    if (opts.serverIds.length === 0) {\r\n        startSvr([absScript, 'env=' + opts.env, \"daemon=\" + opts.daemon]);\r\n    } else {\r\n        for (let one of opts.serverIds) {\r\n            startSvr([absScript, 'env=' + opts.env, \"daemon=\" + opts.daemon, \"id=\" + one]);\r\n        }\r\n    }\r\n\r\n    if (opts.daemon) {\r\n        console.log('The application is running in the background now.\\n');\r\n        process.exit(0);\r\n    }\r\n\r\n    function startSvr(params: string[]) {\r\n        let ls;\r\n        if (opts.daemon) {\r\n            ls = spawn(process.execPath, params, { detached: true, stdio: 'ignore' });\r\n            ls.unref();\r\n        } else {\r\n            ls = spawn(process.execPath, params);\r\n            ls.stdout.on('data', function (data) {\r\n                console.log(data.toString());\r\n            });\r\n            ls.stderr.on('data', function (data) {\r\n                console.log(data.toString());\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction list(opts: { \"host\": string, \"port\": number, \"token\": string, \"interval\": number }) {\r\n    let interval = Math.ceil(opts.interval);\r\n    if (interval < 1) {\r\n        interval = 1;\r\n    }\r\n    connectToMaster(opts.host, opts.port, opts.token, function (client) {\r\n        console.log(\"\");\r\n        requestList();\r\n        let rowNum = 0;\r\n        function requestList() {\r\n            client.request({ \"func\": \"list\" }, 10, function (err, msg: { \"name\": string, \"env\": string, \"serverTypeSort\": string[], \"infoArr\": string[][] }) {\r\n                if (err) {\r\n                    return abort(err);\r\n                }\r\n                let titles = msg.infoArr.shift() as string[];\r\n                titles.splice(1, 1);\r\n                let serverTypes: { [svrType: string]: string[][] } = {};\r\n                for (let one of msg.serverTypeSort) {\r\n                    serverTypes[one] = [];\r\n                }\r\n                for (let one of msg.infoArr) {\r\n                    serverTypes[one[1]].push(one);\r\n                    one.splice(1, 1);\r\n                }\r\n                for (let x in serverTypes) {\r\n                    serverTypes[x].sort(comparer);\r\n                }\r\n                let id = 1;\r\n                titles.unshift(\"\");\r\n                let endArr: string[][] = [];\r\n                endArr.push(titles);\r\n                serverTypes[\"master\"][0].unshift(\" \" + id.toString());\r\n                id++;\r\n                endArr.push(serverTypes[\"master\"][0]);\r\n                delete serverTypes[\"master\"];\r\n\r\n                for (let x in serverTypes) {\r\n                    for (let one of serverTypes[x]) {\r\n                        one.unshift(\" \" + id.toString());\r\n                        id++;\r\n                        endArr.push(one);\r\n                    }\r\n                }\r\n\r\n                readline.cursorTo(process.stdout, 0);\r\n                readline.moveCursor(process.stdout, 0, -rowNum);\r\n                readline.clearScreenDown(process.stdout);\r\n                rowNum = endArr.length + 1;\r\n                mydogListPrint(msg.name, msg.env, endArr);\r\n                setTimeout(requestList, interval * 1000)\r\n            });\r\n        }\r\n    });\r\n\r\n    let comparer = function (a: string[], b: string[]) {\r\n        if (a[0] < b[0]) {\r\n            return -1;\r\n        } else {\r\n            return 1;\r\n        }\r\n    };\r\n\r\n\r\n    function mydogListPrint(appName: string, env: string, infoArr: string[][]) {\r\n        let consoleMaxColumns = process.stdout.columns - 2;\r\n        let nameEnv = \"  appName: \" + appName + \"    env: \" + env;\r\n        console.log(\"\\x1b[35m\" + getRealStr(nameEnv) + \"\\x1b[0m\");\r\n\r\n        let widthArr: number[][] = [];\r\n        let columnWidth: number[] = [];\r\n        let titleLen = infoArr[0].length;\r\n        for (let i = 0; i < titleLen; i++) {\r\n            columnWidth.push(0);\r\n        }\r\n        for (let i = 0; i < infoArr.length; i++) {\r\n            let one = infoArr[i];\r\n            if (one.length > titleLen) {\r\n                one.splice(titleLen);\r\n            } else if (one.length < titleLen) {\r\n                for (let j = titleLen - one.length - 1; j >= 0; j--) {\r\n                    one.push(\"\");\r\n                }\r\n            }\r\n            let tmpArr: number[] = [];\r\n            for (let j = 0; j < titleLen; j++) {\r\n                one[j] = one[j].toString();\r\n                let tmpLen = getDisplayLength(one[j]);\r\n                tmpArr.push(tmpLen);\r\n                if (tmpLen > columnWidth[j]) {\r\n                    columnWidth[j] = tmpLen;\r\n                }\r\n            }\r\n            widthArr[i] = tmpArr;\r\n        }\r\n        for (let i = 0; i < titleLen; i++) {\r\n            columnWidth[i] += 3;\r\n        }\r\n\r\n        for (let i = 0; i < infoArr.length; i++) {\r\n            let one = infoArr[i];\r\n            let tmpWidthArr = widthArr[i];\r\n            for (let j = 0; j < titleLen; j++) {\r\n                one[j] += \" \".repeat(columnWidth[j] - tmpWidthArr[j]);\r\n            }\r\n            if (i === 0) {\r\n                console.log(\"\\x1b[31m\" + getRealStr(one.join(\"\")) + \"\\x1b[0m\");\r\n            } else {\r\n                console.log(getRealStr(one.join(\"\")));\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function getRealStr(str: string) {\r\n            while (getDisplayLength(str) > consoleMaxColumns) {\r\n                str = str.substring(0, str.length - 2);\r\n            }\r\n            return str;\r\n        }\r\n\r\n\r\n        function getDisplayLength(str: string) {\r\n            let realLength = 0, len = str.length, charCode = -1;\r\n            for (var i = 0; i < len; i++) {\r\n                charCode = str.charCodeAt(i);\r\n                if (charCode >= 0 && charCode <= 128) {\r\n                    realLength += 1;\r\n                } else {\r\n                    realLength += 2;\r\n                }\r\n\r\n            }\r\n            return realLength;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction stop(opts: { \"host\": string, \"port\": number, \"token\": string }) {\r\n    confirm('stop the server ? (y/n) [no]   ', (yes) => {\r\n        if (!yes) {\r\n            abort(\"[ canceled ]\")\r\n            return;\r\n        }\r\n        connectToMaster(opts.host, opts.port, opts.token, function (client) {\r\n            client.request({ \"func\": \"stop\" }, 3600, function (err) {\r\n                if (err) {\r\n                    return abort(err);\r\n                }\r\n                abort(\"the application has stopped, please confirm!\");\r\n            });\r\n        });\r\n    })\r\n\r\n}\r\n\r\nfunction remove(opts: { \"host\": string, \"port\": number, \"token\": string, \"serverIds\": string[] }) {\r\n    if (opts.serverIds.length === 0) {\r\n        return abort(\"no server input, please use like `mydog remove serverId-1 [serverId-2 ...]` \")\r\n    }\r\n    confirm(`remove server: ${opts.serverIds.join(\" \")} ? (y/n) [no]   `, (yes) => {\r\n        if (!yes) {\r\n            abort(\"[ canceled ]\")\r\n            return;\r\n        }\r\n        connectToMaster(opts.host, opts.port, opts.token, function (client) {\r\n            client.request({ \"func\": \"remove\", \"args\": opts.serverIds }, 10, function (err) {\r\n                if (err) {\r\n                    return abort(err);\r\n                }\r\n                abort(\"the servers have been removed, please confirm!\");\r\n            });\r\n        });\r\n    });\r\n\r\n}\r\n\r\nfunction removeT(opts: { \"host\": string, \"port\": number, \"token\": string, \"serverTypes\": string[] }) {\r\n    if (opts.serverTypes.length === 0) {\r\n        return abort(\"no serverType input, please use like `mydog removeT serverType-1 [serverType-2 ...]` \")\r\n    }\r\n    confirm(`remove serverType: ${opts.serverTypes.join(\" \")} ? (y/n) [no]   `, (yes) => {\r\n        if (!yes) {\r\n            abort(\"[ canceled ]\")\r\n            return;\r\n        }\r\n        connectToMaster(opts.host, opts.port, opts.token, function (client) {\r\n            client.request({ \"func\": \"removeT\", \"args\": opts.serverTypes }, 10, function (err) {\r\n                if (err) {\r\n                    return abort(err);\r\n                }\r\n                abort(\"the serverTypes have been removed, please confirm!\");\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nfunction cmd(lans: string[]) {\r\n    let routePath = \"serverConfig/sys/route.ts\";\r\n    let serverPath = \"serverConfig/cmd.ts\";\r\n    let nowPath = process.cwd();\r\n    let filepath = path.join(nowPath, routePath);\r\n    if (!fs.existsSync(filepath)) {\r\n        abort(\"  ->  Not find the script: \" + filepath);\r\n    }\r\n    let readStream = fs.createReadStream(filepath);\r\n    let read_l = readline.createInterface({ \"input\": readStream });\r\n\r\n    let hasStart = false;\r\n    let cmdObjArr: { \"cmd\": string, \"note\": string }[] = [];\r\n\r\n    read_l.on(\"line\", function (line) {\r\n        line = line.trim();\r\n        if (line === \"\") {\r\n            return;\r\n        }\r\n        if (!hasStart) {\r\n            if (line.indexOf(\"export\") === 0) hasStart = true;\r\n            return;\r\n        }\r\n        if (line.indexOf(\"]\") === 0) {\r\n            serverCmd();\r\n            clientCmd();\r\n            read_l.close();\r\n            return;\r\n        }\r\n        if (line.indexOf('\"') !== 0) {\r\n            return;\r\n        }\r\n        line = line.substring(1);\r\n        let index = line.indexOf('\"');\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n\r\n        let cmd = line.substring(0, index);\r\n        let note = \"\";\r\n        index = line.indexOf(\"//\");\r\n        if (index !== -1) {\r\n            note = line.substring(index + 2).trim();\r\n        }\r\n        cmdObjArr.push({ \"cmd\": cmd, \"note\": note });\r\n    });\r\n\r\n    read_l.on(\"close\", function () {\r\n        console.log(\"build cmd ok!\");\r\n    });\r\n\r\n\r\n    function serverCmd() {\r\n        let endStr = `export const enum cmd {\\n`\r\n        let index = 0;\r\n        for (let one of cmdObjArr) {\r\n            if (one.note) {\r\n                endStr += `\\t/**\\n\\t * ${one.note}\\n\\t */\\n`;\r\n            }\r\n            let oneStr = one.cmd;\r\n            if (one.cmd.indexOf('.') !== -1) {\r\n                let tmpArr = one.cmd.split('.');\r\n                oneStr = tmpArr[0] + '_' + tmpArr[1] + '_' + tmpArr[2];\r\n            }\r\n            endStr += `\\t${oneStr} = ${index},\\n`;\r\n            index++;\r\n        }\r\n        endStr += '}';\r\n\r\n        let csFilename = path.join(nowPath, serverPath);\r\n        fs.writeFileSync(csFilename, endStr);\r\n    }\r\n\r\n    function clientCmd() {\r\n        let clipath = path.join(nowPath, \"mydog_cli.js\");\r\n        if (!fs.existsSync(clipath)) {\r\n            return;\r\n        }\r\n        let file = require(path.join(nowPath, \"mydog_cli.js\"));\r\n        if (file.mydog_cmd && typeof file.mydog_cmd === \"function\") {\r\n            file.mydog_cmd(lans, cmdObjArr);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction send(opts: { \"host\": string, \"port\": number, \"token\": string, \"serverId\": string, \"serverType\": string }, argv: string[]) {\r\n    if (argv.length === 0) {\r\n        return abort(\"At least one argv is required\");\r\n    }\r\n    let serverIds: string[] = [];\r\n    let serverTypes: string[] = [];\r\n    let endMsg: { \"serverIds\": string[], \"serverTypes\": string[], \"argv\": string[] } = {} as any;\r\n    if (opts.serverId) {\r\n        serverIds = opts.serverId.split(\" \");\r\n        endMsg[\"serverIds\"] = serverIds;\r\n    } else if (opts.serverType) {\r\n        serverTypes = opts.serverType.split(\" \");\r\n        endMsg[\"serverTypes\"] = serverTypes;\r\n    }\r\n    endMsg[\"argv\"] = argv;\r\n    let msg = `sendMsg:\r\n{\r\n    \"serverIds\": ${BSON.serialize(serverIds)}\r\n    \"serverTypes\": ${BSON.serialize(serverTypes)}\r\n    \"argv\": ${BSON.serialize(argv)}\r\n}\r\n(y/n)[no] ?    `\r\n    confirm(msg, (yes) => {\r\n        if (!yes) {\r\n            abort(\"[ canceled ]\")\r\n            return;\r\n        }\r\n        connectToMaster(opts.host, opts.port, opts.token, function (client) {\r\n            console.log();\r\n            client.request({ \"func\": \"send\", \"args\": endMsg }, 60, function (err, data: { \"err\": string, \"timeoutIds\": string[], \"data\": any[] }) {\r\n                client.close(false);\r\n                if (err) {\r\n                    return abort(err);\r\n                }\r\n                if (data.err) {\r\n                    return abort(data.err);\r\n                }\r\n                let clipath = path.join(process.cwd(), \"mydog_cli.js\");\r\n                if (!fs.existsSync(clipath)) {\r\n                    console.log(data);\r\n                    return;\r\n                }\r\n                let file = require(path.join(process.cwd(), \"mydog_cli.js\"));\r\n                if (file.mydog_send && typeof file.mydog_send === \"function\") {\r\n                    file.mydog_send(endMsg, data.timeoutIds, data.data);\r\n                } else {\r\n                    console.log(data);\r\n                }\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\n\r\nfunction connectToMaster(host: string, port: number, token: string, cb: (client: clientProxy) => void) {\r\n    logInfo(\"try to connect  \" + host + \":\" + port, token);\r\n    let client = new clientProxy(host, port, token, cb);\r\n}"]}