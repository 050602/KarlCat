{"version":3,"file":"Sigleton.js","sourceRoot":"","sources":["../../src/core/Sigleton.ts"],"names":[],"mappings":";;;AAAA,gCAA6B;AAE7B,MAAsB,QAAQ;IAC1B;IACA,CAAC;IAED,SAAS;IACF,YAAY;IACnB,CAAC;IAAA,CAAC;IAEF,SAAS;IACF,eAAe;IACtB,CAAC;IAAA,CAAC;IAEF,UAAU;IACH,WAAW;IAClB,CAAC;IAAA,CAAC;IAEQ,MAAM,CAAC,WAAW,CAAC,CAAM;QAC/B,IAAI,GAAG,GAAG,SAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;QACjD,IAAI,CAAC,GAAG,EAAE;YACN,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;YACd,SAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;YAC5C,GAAG,CAAC,YAAY,EAAE,CAAC;SACtB;QACD,OAAO,GAAG,CAAC;IACf,CAAC;CACJ;AAzBD,4BAyBC","sourcesContent":["import { app } from \"../app\";\r\n\r\nexport abstract class Sigleton {\r\n    constructor() {\r\n    }\r\n\r\n    //当实例初始化时\r\n    public initInstance() {\r\n    };\r\n\r\n    //当实例被销毁时\r\n    public destoryInstance() {\r\n    };\r\n\r\n    //当实例被热更新时\r\n    public onHotReload() {\r\n    };\r\n\r\n    protected static getInstance(T: any) {\r\n        let ins = app.InstanceMap.get(T.SigletonInsName);\r\n        if (!ins) {\r\n            ins = new T();\r\n            app.InstanceMap.set(T.SigletonInsName, ins);\r\n            ins.initInstance();\r\n        }\r\n        return ins;\r\n    }\r\n}"]}