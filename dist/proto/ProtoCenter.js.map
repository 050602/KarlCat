{"version":3,"file":"ProtoCenter.js","sourceRoot":"","sources":["../../src/proto/ProtoCenter.ts"],"names":[],"mappings":";;;AAAA,+CAA4C;AAE5C,cAAc;AACd,MAAa,WAAY,SAAQ,mBAAQ;IAEhC,MAAM,KAAK,QAAQ;QACzB,OAAO,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IAWF,SAAS;IACF,YAAY;QAClB,IAAI,IAAI,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QAC7B,gDAAgD;IACjD,CAAC;IAAA,CAAC;IAEF,SAAS;IACF,eAAe;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACnB,CAAC;IAAA,CAAC;;AAzBH,kCA2BC;AA1Bc,2BAAe,GAAG,aAAa,CAAC","sourcesContent":["import { Sigleton } from \"../core/Sigleton\";\n\n//该类不支持热更新啊啊啊啊\nexport class ProtoCenter extends Sigleton{\n\tpublic static SigletonInsName = \"ProtoCenter\";\n\t\tpublic static get Instance(): ProtoCenter {\n\t\t\treturn super.getInstance(ProtoCenter);\n\t\t}\n\t// private static _sigleton: ProtoCenter;\n\t// public static get Instance(): ProtoCenter {\n\t// \tif (!ProtoCenter._sigleton) {\n\t// \t\tProtoCenter._sigleton = new ProtoCenter();\n\t// \t\tProtoCenter._sigleton.initInstance();\n\t// \t}\n\t// \treturn ProtoCenter._sigleton;\n\t// }\n\n\tpublic lanlu: any;\n\t//当实例初始化时\n\tpublic initInstance() {\n\t\tlet file = require(\"./protobuf/proto.js\");\n\t\tthis.lanlu = file.lanluproto;\n\t\t// console.log(\"ProtoCenter initInstance Succ\");\n\t};\n\n\t//当实例被销毁时\n\tpublic destoryInstance() {\n\t\tthis.lanlu = null;\n\t};\n\n}\n\n\n"]}