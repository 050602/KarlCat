{"version":3,"file":"RoleTable.js","sourceRoot":"","sources":["../../src/database/RoleTable.ts"],"names":[],"mappings":";;;;;AAAA,wDAA8C;AAU9C,MAAqB,SAAS;IAInB,MAAM,CAAC,IAAI,CAAC,EAAqB;QACpC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,kBAAQ,CAAC,MAAM,CAAC;YAChE,GAAG,EAAE,MAAM;YACX,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,MAAM;YACb,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,MAAM,EAAC,MAAM;SAC1B,CAAC,CAAC,CAAC;IACR,CAAC;IACM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAc;QACrC,MAAM,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAY;QACjC,IAAI,IAAI,GAAa,IAAI,CAAC;QAC1B,MAAM,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAChD,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAC3B,IAAI,GAAG,KAAK,CAAC;QACjB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAgB;QACxC,IAAI,IAAI,GAAe,EAAE,CAAC;QAC1B,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAC5D,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,QAAQ,EAAE,KAAK,CAAC,CAAC;YACtD,IAAI,GAAG,KAAK,CAAC;QACjB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;OAKG;IACI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAY,EAAE,IAAS;QAC9C,MAAM,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAChE,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAY;QACnC,MAAM,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACrD,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;;AAjEL,4BAkEC;AAhEkB,mBAAS,GAAG,WAAW,CAAC","sourcesContent":["import mongoose, { Mongoose } from \"mongoose\";\r\n\r\nexport interface RoleType {\r\n    _id: Number,//角色ID\r\n    userId: Number,//用户ID\r\n    level: Number,//橘色等级\r\n    rank: Number,//角色阶级\r\n    nickName: String,//角色昵称\r\n}\r\n\r\nexport default class RoleTable {\r\n\r\n    private static tableName = \"RoleTable\";\r\n    private static table: mongoose.Model<any, {}, {}>;\r\n    public static init(db: mongoose.Mongoose) {\r\n        RoleTable.table = db.model(RoleTable.tableName, new mongoose.Schema({\r\n            _id: Number,//角色ID\r\n            userId: Number,//用户ID\r\n            level: Number,//橘色等级\r\n            rank: Number,//角色阶级\r\n            nickName: String,//角色昵称\r\n        }));\r\n    }\r\n    public static async insert(data: RoleType) {\r\n        await RoleTable.table.create(data).then(() => {\r\n            console.log(\"数据插入成功\");\r\n        }).catch((err) => {\r\n            console.log(\"数据插入失败:\", err, data);\r\n        });\r\n    }\r\n\r\n    public static async find(myid: Number): Promise<RoleType> {\r\n        let data: RoleType = null;\r\n        await RoleTable.table.findById(myid).then((value) => {\r\n            console.log(\"查找成功\", value);\r\n            data = value;\r\n        }).catch((err) => {\r\n            console.log(\"查询失败:\", err, myid);\r\n        });\r\n\r\n        return data;\r\n    }\r\n\r\n    public static async findAll(myUserid: Number): Promise<RoleType[]> {\r\n        let data: RoleType[] = [];\r\n        await RoleTable.table.find({ userId: myUserid }).then((value) => {\r\n            console.log(\"查找成功\", myUserid, typeof myUserid, value);\r\n            data = value;\r\n        }).catch((err) => {\r\n            console.log(\"查询失败:\", myUserid, err);\r\n        });\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param myid \r\n     * @param data 更新部分的数据\r\n     * @returns \r\n     */\r\n    public static async update(myid: Number, data: any) {\r\n        await RoleTable.table.updateOne({ _id: myid }, data).then((value) => {\r\n            console.log(\"更新成功\", myid);\r\n        }).catch((err) => {\r\n            console.log(\"更新失败:\", err, myid);\r\n        });\r\n    }\r\n\r\n    public static async delete(myid: Number) {\r\n        await RoleTable.table.deleteOne({ _id: myid }).then(() => {\r\n            console.log(\"删除成功\", myid);\r\n        }).catch((err) => {\r\n            console.log(\"删除失败:\", err, myid);\r\n        });\r\n    }\r\n} "]}