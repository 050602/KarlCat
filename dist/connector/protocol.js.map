{"version":3,"file":"protocol.js","sourceRoot":"","sources":["../../src/connector/protocol.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { isDebug } from \"../app\";\r\nimport { Application } from \"../application\";\r\nimport { errLog,logInfo, warningLog } from \"../LogTS\";\r\nimport { lanlu } from \"../proto/protobuf/proto.js\";\r\nimport * as define from \"../util/define\";\r\nimport { I_encodeDecodeConfig } from \"../util/interfaceDefine\";\r\n\r\nlet app: Application;\r\nexport function init(_app: Application) {\r\n    app = _app;\r\n}\r\n\r\n//该代码是正在使用的解码编码工具\r\nexport let default_encodeDecode: Required<I_encodeDecodeConfig> = {\r\n    \"protoDecode\": function (data: Buffer) {\r\n        // logInfo(\"protoDecode\", data.readUInt16BE(1), data.readUInt16BE(3));\r\n        return {\r\n            \"mainKey\": data.readUInt16BE(1),\r\n            \"sonKey\": data.readUInt16BE(3),\r\n            \"msg\": data.subarray(5),\r\n            \"toS\": true\r\n        }\r\n    },\r\n    \"msgDecode\": function (mainKey: number, sonKey: number, msg: Buffer, toS: boolean): any {\r\n        let rlanlu = global[\"lanlu\"];\r\n        let r = lanlu;\r\n        if (toS) {\r\n            let name = 'Pt' + mainKey + '_' + sonKey + '_tos';\r\n            let obj = rlanlu[name];\r\n            if (!obj) {\r\n                errLog(\"msgDecode 不存在协议：\", mainKey + \"_\" + sonKey + \"_tos\");\r\n                return null;\r\n            }\r\n            let decodeData: any = obj.decode(msg);\r\n\r\n            return decodeData;\r\n        } else {\r\n            let decodeData: any = rlanlu['Pt' + mainKey + '_' + sonKey + '_toc'].decode(msg);\r\n            return decodeData;\r\n        }\r\n\r\n    },\r\n    \"protoEncode\": function (mainKey: number, sonKey: number, msg: any, toS: boolean): Buffer {\r\n        let msgUint8: Uint8Array = app.msgEncode(mainKey, sonKey, msg, toS);\r\n        // let msgBuf = Buffer.from(msgUint8.buffer)\r\n        // logInfo(\"protoEncode===\", mainKey, sonKey, toS);\r\n        let buf = Buffer.allocUnsafe(msgUint8.length + 9);\r\n        buf.writeUInt32BE(msgUint8.length + 5, 0);              //头4位是 消息长度 加上 MainKey和Sonkey 4位，加上 defindServerToClient.msg 1位  总长度是msgBuf.length + 5 位，\r\n        buf.writeUInt8(define.Server_To_Client.msg, 4); //标记这条消息是自定义消息\r\n        buf.writeUInt16BE(mainKey, 5);\r\n        buf.writeUInt16BE(sonKey, 7);\r\n        Buffer.from(msgUint8).copy(buf, 9);  //buf总长度是 4 + 1 + 2 + 2 = 9位，偏移9\r\n        // logInfo(\"发送字节\", buf.length);\r\n        return buf;\r\n    },\r\n    \"msgEncode\": function (mainKey: number, sonKey: number, msg: any, toS: boolean): Uint8Array {\r\n        // logInfo(\"msgEncode\", mainKey, sonKey, toS);\r\n        let rlanlu = global[\"lanlu\"];\r\n        let r = lanlu;\r\n        if (toS) {\r\n            let obj = rlanlu['Pt' + mainKey + '_' + sonKey + '_tos'];\r\n            if (!obj) {\r\n                errLog(\"msgDecode 不存在协议：\", mainKey + \"_\" + sonKey + \"_tos\");\r\n                return null;\r\n            }\r\n            if (isDebug)\r\n                checkPorto(obj.prototype, msg);\r\n            let encodeData: Uint8Array = obj.encode(msg).finish();\r\n            if (encodeData.buffer) {\r\n                return encodeData;\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            let obj = rlanlu['Pt' + mainKey + '_' + sonKey + '_toc'];\r\n            if (!obj) {\r\n                errLog(\"msgDecode 不存在协议：\", mainKey + \"_\" + sonKey + \"_toc\");\r\n                return null;\r\n            }\r\n            if (isDebug)\r\n                checkPorto(obj.prototype, msg);\r\n\r\n            let encodeData: Uint8Array = obj.encode(msg).finish();\r\n\r\n            if (encodeData.buffer) {\r\n                return encodeData;\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport let initCheckStruct = () => {\r\n    if (!isDebug) {\r\n        return;\r\n    }\r\n    lanstruct = [];\r\n    let rlanlu = global[\"lanlu\"];\r\n    for (let key in rlanlu) {\r\n        if (key.startsWith(\"Pt\")) {\r\n            continue;\r\n        }\r\n        lanstruct.push(key);\r\n    }\r\n}\r\n\r\nlet lanstruct: string[];\r\n\r\n\r\n\r\nlet checkPorto = (proto: any, msg: any) => {\r\n    //检测Proto\r\n    try {\r\n        for (let key in proto) {\r\n            if (key.trim() == \"toJSON\") {\r\n                continue;\r\n            }\r\n\r\n            for (let key2 in msg) {\r\n                if (key == key2) {\r\n                    if (msg[key] instanceof Array) {\r\n                        let rlanlu = global[\"lanlu\"];\r\n                        let msgarr: any[] = msg[key]\r\n                        for (let i = 0; i < msgarr.length; i++) {\r\n                            for (let k = 0; k < lanstruct.length; k++) {\r\n                                checkPorto(rlanlu[lanstruct[k]].prototype, msgarr[i]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (msg[key2] instanceof Object) {\r\n                        let rlanlu = global[\"lanlu\"];\r\n                        for (let k = 0; k < lanstruct.length; k++) {\r\n                            checkPorto(rlanlu[lanstruct[k]].prototype, msg[key2]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                let precent = strSimilarity2Percent(key, key2);\r\n                if (precent > 80 && precent != 100) {\r\n                    let str = \"致命错误：协议的字符串可能存在拼写错误：\" + key + \"---\" + key2 + \"  字符串相似度：\" + precent;\r\n                    throw str;\r\n                }\r\n\r\n            }\r\n        }\r\n    } catch (error) {\r\n        errLog(\"致命错误，协议检测\", error);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nlet strSimilarity2Number = (s, t) => {\r\n    var n = s.length, m = t.length, d = [];\r\n    var i, j, s_i, t_j, cost;\r\n    if (n == 0) return m;\r\n    if (m == 0) return n;\r\n    for (i = 0; i <= n; i++) {\r\n        d[i] = [];\r\n        d[i][0] = i;\r\n    }\r\n    for (j = 0; j <= m; j++) {\r\n        d[0][j] = j;\r\n    }\r\n    for (i = 1; i <= n; i++) {\r\n        s_i = s.charAt(i - 1);\r\n        for (j = 1; j <= m; j++) {\r\n            t_j = t.charAt(j - 1);\r\n            if (s_i == t_j) {\r\n                cost = 0;\r\n            } else {\r\n                cost = 1;\r\n            }\r\n            d[i][j] = Minimum(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\r\n        }\r\n    }\r\n    return d[n][m];\r\n}\r\n//两个字符串的相似程度，并返回相似度百分比\r\nlet strSimilarity2Percent = (s, t) => {\r\n    var l = s.length > t.length ? s.length : t.length;\r\n    var d = strSimilarity2Number(s, t);\r\n    return Math.floor((1 - d / l) * 100);\r\n}\r\nlet Minimum = (a, b, c) => {\r\n    return a < b ? (a < c ? a : c) : (b < c ? b : c);\r\n}"]}