{"version":3,"file":"cliUtil.js","sourceRoot":"","sources":["../../src/components/cliUtil.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * cli command processing module such as mydog list\r\n */\r\n\r\n\r\nimport { Application } from \"../application\";\r\nimport { DateUtils } from \"../utils/DateUtils\";\r\nimport { Master_ClientProxy, Master_ServerProxy } from \"./master\";\r\nimport { monitor_client_proxy } from \"./monitor\";\r\nimport define = require(\"../util/define\");\r\nconst BSON = require('bson');\r\nconst Long = BSON.Long;\r\n\r\nlet serverTypeSort: string[] = [];\r\n\r\ninterface requset {\r\n    cb: Function;\r\n    timeOut: NodeJS.Timeout;\r\n}\r\n\r\nexport class MasterCli {\r\n    private app: Application;\r\n    private servers: { [id: string]: Master_ServerProxy };\r\n    private monitorRequests: { [reqId: number]: requset } = {};\r\n    private reqId: number = 1;\r\n    private exiting = false;    // 进程是否正在退出\r\n    constructor(app: Application, servers: { [id: string]: Master_ServerProxy }) {\r\n        this.app = app;\r\n        this.servers = servers;\r\n        serverTypeSort.push(\"master\");\r\n        for (let svrType in app.serversConfig) {\r\n            serverTypeSort.push(svrType);\r\n        }\r\n    }\r\n\r\n    deal_cli_msg(socket: Master_ClientProxy, data: any) {\r\n        let reqId = data.reqId;\r\n        data = data.msg;\r\n        if ((this as any)[\"func_\" + data.func]) {\r\n            (this as any)[\"func_\" + data.func](reqId, socket, data.args);\r\n        }\r\n    }\r\n\r\n    deal_monitor_msg(data: { reqId: number; msg: any }) {\r\n        let req = this.monitorRequests[data.reqId];\r\n        if (req) {\r\n            delete this.monitorRequests[data.reqId];\r\n            clearTimeout(req.timeOut);\r\n            req.cb(null, data.msg);\r\n        }\r\n    }\r\n\r\n    private send_to_monitor(socket: Master_ServerProxy, msg: { \"func\": string, \"args\"?: any }, timeout: number, cb?: Function) {\r\n        let data = { \"T\": define.Master_To_Monitor.cliMsg, \"msg\": msg } as any;\r\n        if (cb) {\r\n            let _reqId = this.reqId++;\r\n            data[\"reqId\"] = _reqId;\r\n            let self = this;\r\n            this.monitorRequests[_reqId] = {\r\n                \"cb\": cb,\r\n                \"timeOut\": setTimeout(function () {\r\n                    delete self.monitorRequests[_reqId];\r\n                    cb(\"time out\");\r\n                }, timeout * 1000)\r\n            }\r\n        }\r\n        let dataBuf: Buffer = BSON.serialize(data);\r\n        socket.send(dataBuf);\r\n    }\r\n\r\n    private func_list(reqId: number, socket: Master_ClientProxy, args: any) {\r\n        let self = this;\r\n        let num = 0;\r\n        for (let sid in this.servers) {\r\n            num++;\r\n            this.send_to_monitor(this.servers[sid], { \"func\": \"list\" }, 10, cb)\r\n        }\r\n        let titles = [\"serverName\", \"serverType\", \"pid\", \"rss(M)\", \"upTime(d-h-m)\"];\r\n        let infos = getListInfo(this.app);\r\n        let listFunc = this.app.someconfig.mydogList;\r\n        if (typeof listFunc === \"function\") {\r\n            let resArr = listFunc();\r\n            if (resArr && Array.isArray(resArr)) {\r\n                for (let one of resArr) {\r\n                    titles.push(one.title);\r\n                    infos.push(one.value);\r\n                }\r\n            }\r\n        }\r\n        let serverInfoArr: string[][] = [];\r\n        serverInfoArr.push(titles);\r\n        serverInfoArr.push(infos);\r\n        if (num === 0) {\r\n            cb(\"no other server\", null);\r\n        }\r\n        function cb(err: any, data: any) {\r\n            if (!err) {\r\n                serverInfoArr.push(data);\r\n            }\r\n            num--;\r\n            if (num <= 0) {\r\n                socket.send({\r\n                    \"reqId\": reqId,\r\n                    \"msg\": {\r\n                        \"name\": self.app.appName,\r\n                        \"env\": self.app.env,\r\n                        \"serverTypeSort\": serverTypeSort,\r\n                        \"infoArr\": serverInfoArr,\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private func_stop(reqId: number, socket: Master_ClientProxy, args: string[]) {\r\n        let num = 0;\r\n        for (let sid in this.servers) {\r\n            num++;\r\n        }\r\n        if (num === 0) {\r\n            cb(\"no server\", null);\r\n            return;\r\n        }\r\n\r\n        if (this.exiting) {\r\n            socket.send({ \"reqId\": reqId });\r\n            return;\r\n        }\r\n        this.exiting = true;\r\n\r\n        for (let sid in this.servers) {\r\n            this.send_to_monitor(this.servers[sid], { \"func\": \"stop\" }, 3600, cb);    // stop 会导致 master 也关闭，且master在其他服关闭后才能关闭，所以超时时间设为很久\r\n        }\r\n\r\n        function cb(err: any, data: any) {\r\n            num--;\r\n            if (num <= 0) {\r\n                socket.send({ \"reqId\": reqId });\r\n                exitCall();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private func_remove(reqId: number, socket: Master_ClientProxy, args: string[]) {\r\n        let num = 0;\r\n        for (let i = 0; i < args.length; i++) {\r\n            if (!this.servers[args[i]]) {\r\n                continue;\r\n            }\r\n            num++;\r\n            this.send_to_monitor(this.servers[args[i]], { \"func\": \"remove\" }, 10, cb);\r\n        }\r\n        if (num === 0) {\r\n            cb(\"no server\", null);\r\n        }\r\n        function cb(err: any, data: any) {\r\n            num--;\r\n            if (num <= 0) {\r\n                socket.send({ \"reqId\": reqId });\r\n            }\r\n        }\r\n    }\r\n\r\n    private func_removeT(reqId: number, socket: Master_ClientProxy, args: string[]) {\r\n        let num = 0;\r\n        for (let x in this.servers) {\r\n            let one = this.servers[x];\r\n            if (args.indexOf(one.serverType) === -1) {\r\n                continue;\r\n            }\r\n            num++;\r\n            this.send_to_monitor(one, { \"func\": \"removeT\" }, 10, cb);\r\n        }\r\n        if (num === 0) {\r\n            cb(\"no serverType\", null);\r\n        }\r\n        function cb(err: any, data: any) {\r\n            num--;\r\n            if (num <= 0) {\r\n                socket.send({ \"reqId\": reqId });\r\n            }\r\n        }\r\n    }\r\n\r\n    private func_send(reqId: number, socket: Master_ClientProxy, args: { \"serverIds\": string[], \"serverTypes\": string[], \"argv\": string[] }) {\r\n        let okArr: Master_ServerProxy[] = [];\r\n        if (args.serverIds) {\r\n            for (let id of args.serverIds) {\r\n                if (this.servers[id]) {\r\n                    okArr.push(this.servers[id]);\r\n                }\r\n            }\r\n        } else if (args.serverTypes) {\r\n            for (let x in this.servers) {\r\n                let one = this.servers[x];\r\n                if (args.serverTypes.includes(one.serverType)) {\r\n                    okArr.push(one);\r\n                }\r\n            }\r\n        } else {\r\n            for (let x in this.servers) {\r\n                okArr.push(this.servers[x]);\r\n            }\r\n        }\r\n\r\n        if (okArr.length === 0) {\r\n            socket.send({\r\n                \"reqId\": reqId,\r\n                \"msg\": {\r\n                    \"err\": \"no target serverIds\"\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        let num = okArr.length;\r\n        let endData: { \"serverName\": string, \"serverType\": string, \"data\": any }[] = [];\r\n        let timeoutIds: string[] = [];\r\n        for (let one of okArr) {\r\n            this.send_to_monitor(one, { \"func\": \"send\", \"args\": args.argv }, 60, (err: any, data: any) => {\r\n                if (err) {\r\n                    timeoutIds.push(one.sid);\r\n                } else {\r\n                    endData.push({ \"serverName\": one.sid, \"serverType\": one.serverType, \"data\": data });\r\n                }\r\n                num--;\r\n                if (num <= 0) {\r\n                    socket.send({ \"reqId\": reqId, \"msg\": { \"err\": \"\", \"timeoutIds\": timeoutIds, \"data\": endData } });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction getListInfo(app: Application) {\r\n    let mem = process.memoryUsage();\r\n    let Mb = 1024 * 1024;\r\n    return [app.serverName, app.serverType, process.pid.toString(), Math.floor(mem.rss / Mb).toString(), formatTime(app.startTime)];\r\n}\r\n\r\nfunction formatTime(time: number) {\r\n    time = Math.floor((DateUtils.timestamp() - time) * 0.001);\r\n    var days = Math.floor(time / (24 * 3600));\r\n    time = time % (24 * 3600);\r\n    var hours = Math.floor(time / 3600);\r\n    time = time % 3600;\r\n    var minutes = Math.ceil(time / 60);\r\n    return days + \"-\" + hours + \"-\" + minutes;\r\n}\r\n\r\n\r\n\r\nexport class MonitorCli {\r\n    private app: Application;\r\n    private exiting = false;    // 进程是否正在退出\r\n    constructor(app: Application) {\r\n        this.app = app;\r\n    }\r\n\r\n    deal_master_msg(socket: monitor_client_proxy, data: any) {\r\n        let reqId = data.reqId;\r\n        data = data.msg;\r\n        if ((this as any)[\"func_\" + data.func]) {\r\n            (this as any)[\"func_\" + data.func](reqId, socket, data.args);\r\n        }\r\n    }\r\n\r\n    private send_to_master(socket: monitor_client_proxy, msg: any) {\r\n        socket.send(msg);\r\n    }\r\n\r\n\r\n    private func_list(reqId: number, socket: monitor_client_proxy, args: any) {\r\n        let infos = getListInfo(this.app);\r\n        let listFunc = this.app.someconfig.mydogList;\r\n        if (typeof listFunc === \"function\") {\r\n            let resArr = listFunc();\r\n            if (resArr && Array.isArray(resArr)) {\r\n                for (let one of resArr) {\r\n                    infos.push(one.value);\r\n                }\r\n            }\r\n        }\r\n\r\n        let msg = {\r\n            \"T\": define.Monitor_To_Master.cliMsg,\r\n            \"reqId\": reqId,\r\n            \"msg\": infos\r\n        };\r\n        this.send_to_master(socket, msg);\r\n    }\r\n\r\n    private func_stop(reqId: number, socket: monitor_client_proxy, args: any) {\r\n        let msg = {\r\n            \"T\": define.Monitor_To_Master.cliMsg,\r\n            \"reqId\": reqId,\r\n        };\r\n        if (this.exiting) {\r\n            return;\r\n        }\r\n        this.exiting = true;\r\n        let exitFunc = this.app.someconfig.onBeforeExit;\r\n        if (exitFunc) {\r\n            exitFunc(() => {\r\n                this.send_to_master(socket, msg);\r\n                exitCall();\r\n            });\r\n        } else {\r\n            this.send_to_master(socket, msg);\r\n            exitCall();\r\n        }\r\n    }\r\n\r\n    private func_remove(reqId: number, socket: monitor_client_proxy, args: any) {\r\n        let msg = {\r\n            \"T\": define.Monitor_To_Master.cliMsg,\r\n            \"reqId\": reqId,\r\n        };\r\n        this.send_to_master(socket, msg);\r\n        if (this.exiting) {\r\n            return;\r\n        }\r\n        this.exiting = true;\r\n        let exitFunc = this.app.someconfig.onBeforeExit;\r\n        if (exitFunc) {\r\n            exitFunc(() => {\r\n                exitCall();\r\n            });\r\n        } else {\r\n            exitCall();\r\n        }\r\n\r\n    }\r\n\r\n    private func_removeT(reqId: number, socket: monitor_client_proxy, args: any) {\r\n        let msg = {\r\n            \"T\": define.Monitor_To_Master.cliMsg,\r\n            \"reqId\": reqId,\r\n        };\r\n        this.send_to_master(socket, msg);\r\n        if (this.exiting) {\r\n            return;\r\n        }\r\n        this.exiting = true;\r\n        let exitFunc = this.app.someconfig.onBeforeExit;\r\n        if (exitFunc) {\r\n            exitFunc(() => {\r\n                exitCall();\r\n            });\r\n        } else {\r\n            exitCall();\r\n        }\r\n    }\r\n\r\n    private func_send(reqId: number, socket: monitor_client_proxy, args: string[]) {\r\n        let msg = {\r\n            \"T\": define.Monitor_To_Master.cliMsg,\r\n            \"reqId\": reqId,\r\n            \"msg\": null,\r\n        };\r\n        let sendFunc = this.app.someconfig.onMydogSend;\r\n        if (sendFunc) {\r\n            sendFunc(args, (data) => {\r\n                if (data === undefined) {\r\n                    data = null;\r\n                }\r\n                msg.msg = data;\r\n                this.send_to_master(socket, msg);\r\n            });\r\n        } else {\r\n            this.send_to_master(socket, msg);\r\n        }\r\n    }\r\n}\r\n\r\n/** 进程 1s 后退出 */\r\nfunction exitCall() {\r\n    setTimeout(() => {\r\n        process.exit();\r\n    }, 1000);\r\n}"]}