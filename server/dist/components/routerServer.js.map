{"version":3,"file":"routerServer.js","sourceRoot":"","sources":["../../src/components/routerServer.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { Application } from \"../application\";\r\nimport * as protocol from \"../connector/protocol\";\r\nimport { ServerType } from \"../register/route\";\r\nimport { I_clientManager, I_clientSocket, I_connectorConstructor, I_encodeDecodeConfig, loggerLevel, loggerType, sessionCopyJson } from \"../util/interfaceDefine\";\r\nimport { Session, initSessionApp } from \"./session\";\r\nconst BSON = require('bson');\r\nconst Long = BSON.Long;\r\n\r\n\r\nexport class RouterServer {\r\n    private app: Application;\r\n    private clientManager: ClientManager;\r\n    constructor(app: Application) {\r\n        this.app = app;\r\n        initSessionApp(this.app);\r\n\r\n        let defaultEncodeDecode: Required<I_encodeDecodeConfig> = protocol.default_encodeDecode;\r\n\r\n        defaultEncodeDecode = protocol.default_encodeDecode;\r\n\r\n        let encodeDecodeConfig = this.app.someconfig.encodeDecode || {};\r\n        this.app.protoEncode = encodeDecodeConfig.protoEncode || defaultEncodeDecode.protoEncode;\r\n        this.app.msgEncode = encodeDecodeConfig.msgEncode || defaultEncodeDecode.msgEncode;\r\n        this.app.protoDecode = encodeDecodeConfig.protoDecode || defaultEncodeDecode.protoDecode;\r\n        this.app.msgDecode = encodeDecodeConfig.msgDecode || defaultEncodeDecode.msgDecode;\r\n\r\n        this.clientManager = new ClientManager(app);\r\n    }\r\n\r\n    start(cb: Function) {\r\n        let self = this;\r\n        let startCb = function () {\r\n            let str = `listening at [${self.app.serverInfo.host}:${self.app.serverInfo.clientPort}]  ${self.app.serverName} (clientPort)`;\r\n            console.log(str);\r\n            self.app.logger(loggerType.frame, loggerLevel.info, str);\r\n            cb && cb();\r\n        };\r\n\r\n        let mydog = require(\"../mydog\");\r\n        let connectorConfig = this.app.someconfig.connector || {};\r\n        let connectorConstructor: I_connectorConstructor = connectorConfig.connector || mydog.connector.Tcp;\r\n        new connectorConstructor({\r\n            \"app\": this.app,\r\n            \"clientManager\": this.clientManager,\r\n            \"config\": this.app.someconfig.connector,\r\n            \"startCb\": startCb\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sync session\r\n     */\r\n    applySession(data: Buffer) {\r\n        let session = BSON.deserialize(data.subarray(1)) as sessionCopyJson;\r\n        let client = this.app.clients[session.uid];\r\n        if (client) {\r\n            client.session.applySession(session.settings);\r\n        }\r\n    }\r\n    /**\r\n     * The front-end server forwards the message of the back-end server to the client\r\n     */\r\n    sendMsgByUids(data: Buffer) {\r\n        let uidsLen = data.readUInt16BE(1);\r\n        let msgBuf = data.subarray(3 + uidsLen * 8);\r\n        let clients = this.app.clients;\r\n        let client: I_clientSocket;\r\n        let i: number;\r\n\r\n\r\n        // gzaLog(\"sendMsgByUids\", uidsLen, this.app.clientNum, clients, this.app.serverName);\r\n        for (i = 0; i < uidsLen; i++) {\r\n            let socketId = data.readBigUint64BE(3 + i * 8);\r\n            client = clients[Number(socketId)];\r\n            if (client) {\r\n                client.send(msgBuf);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction clientOnOffCb() {\r\n\r\n}\r\n\r\nclass ClientManager implements I_clientManager {\r\n    private app: Application;\r\n    private router: { [serverType: string]: (session: Session) => string };\r\n    private clientOnCb: (session: Session) => void = null as any;\r\n    private clientOffCb: (session: Session) => void = null as any;\r\n    private toGate: string;\r\n    constructor(app: Application) {\r\n        this.app = app;\r\n        this.router = this.app.router;\r\n        let connectorConfig = this.app.someconfig.connector || {};\r\n        this.clientOnCb = connectorConfig.clientOnCb || clientOnOffCb;\r\n        this.clientOffCb = connectorConfig.clientOffCb || clientOnOffCb;\r\n        this.toGate = app.serverInfo.toGate;\r\n    }\r\n\r\n\r\n\r\n    addClient(client: I_clientSocket) {\r\n        if (client.session) {\r\n            this.app.logger(loggerType.frame, loggerLevel.warn, \"frontendServer -> 这个新的客户端Socket已有建立, close it\");\r\n            client.close();\r\n            return;\r\n        }\r\n        this.app.clientNum++;\r\n\r\n        let session = new Session(this.app.serverName);\r\n        session.socket = client;\r\n        client.session = session;\r\n        this.clientOnCb(session as any);\r\n    }\r\n\r\n    removeClient(client: I_clientSocket) {\r\n        let session = client.session;\r\n        // logTest(\"removeClient\", session.uid, this.app.clients);\r\n        if (!session) {\r\n            return;\r\n        }\r\n\r\n\r\n        delete this.app.clients[session.uid];\r\n        this.app.clientNum--;\r\n\r\n        client.session = null as any;\r\n        session.socket = null as any;\r\n        this.clientOffCb(session as any);\r\n    }\r\n\r\n\r\n    handleMsg(client: I_clientSocket, msgBuf: Buffer) {\r\n        try {\r\n            let id = this.router[this.toGate](client.session);\r\n            let socket = this.app.rpcPool.getSocket(id);\r\n            if (!socket) {\r\n                return;\r\n            }\r\n            let svr = this.app.serversNameMap[id];\r\n            if (svr.serverType !== this.toGate || svr.frontend) {\r\n                this.app.logger(loggerType.msg, loggerLevel.warn, \"frontendServer -> illegal remote\");\r\n                return;\r\n            }\r\n\r\n            socket.send(msgBuf);\r\n        } catch (e: any) {\r\n            let error: string = this.app.serverName + \"-----\" + e.stack\r\n            this.app.logger(loggerType.msg, loggerLevel.error, error);\r\n        }\r\n    }\r\n\r\n\r\n}"]}