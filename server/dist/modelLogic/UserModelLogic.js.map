{"version":3,"file":"UserModelLogic.js","sourceRoot":"","sources":["../../src/modelLogic/UserModelLogic.ts"],"names":[],"mappings":";;;AACA,kDAA+C;AAG/C,qDAAkD;AAElD,MAAa,cAAe,SAAQ,+BAAc;IACvC,WAAW,CAAC,OAAe;IAClC,CAAC;IACM,YAAY,CAAC,OAAe;QAC/B,IAAI,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC9D,CAAC;IACM,MAAM,KAAK,QAAQ;QACtB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAGD,uGAAuG;IAChG,KAAK,CAAC,SAAS,CAAC,GAAW,EAAE,UAAe,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAA0D;QACrI,IAAI,IAAI,GAAG,MAAM,qBAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,KAAK,CAAC,eAAe,CAAC,GAAW,EAAE,UAAe,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAA0D;QAC3I,IAAI,IAAI,GAAG,MAAM,qBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IAChB,CAAC;IAGM,KAAK,CAAC,WAAW,CAAC,OAAe;QACpC,OAAO,qBAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC3D,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAAC,QAAgB;QAC1C,OAAO,qBAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjE,CAAC;CAIJ;AAjCD,wCAiCC","sourcesContent":["import { UserData } from \"../database/UserTable\";\r\nimport { UserModel } from \"../model/UserModel\";\r\nimport { DateUtils } from \"../utils/DateUtils\";\r\nimport { CONFIG_PATH, FileUtils, TXT_SUFFIX } from \"../utils/FileUtils\";\r\nimport { BaseModelLogic } from \"./BaseModelLogic\";\r\n\r\nexport class UserModelLogic extends BaseModelLogic {\r\n    public deleteCache(roleUid: number): void {\r\n    }\r\n    public cacheRefresh(roleUid: number): void {\r\n        let data17 = UserModelLogic.Instance.getUserData(roleUid);\r\n    }\r\n    public static get Instance(): UserModelLogic {\r\n        return this.getInstance();\r\n    }\r\n\r\n\r\n    //请注意，要热更此方法，需要把model的cache重新new，否则引用还在旧的单例里 ，假如要热更fetchData方法请参考 RoleSaveDataModelLogic 的 initInstance\r\n    public async fetchData(key: number, staleValue: any, { options, signal, context }: { options: any, signal: any, context: UserModelLogic }) {\r\n        let data = await UserModel.Instance.findByRoleUid(key);\r\n        return data;\r\n    }\r\n\r\n    public async fetchDataString(key: string, staleValue: any, { options, signal, context }: { options: any, signal: any, context: UserModelLogic }) {\r\n        let data = await UserModel.Instance.find(key);\r\n        return data;\r\n    }\r\n\r\n\r\n    public async getUserData(roleUid: number): Promise<UserData> {\r\n        return UserModel.Instance.userDataCache.fetch(roleUid);\r\n    }\r\n\r\n    public async getLoginUserData(username: string): Promise<UserData> {\r\n        return UserModel.Instance.userDataLoginCache.fetch(username);\r\n    }\r\n\r\n\r\n\r\n}"]}