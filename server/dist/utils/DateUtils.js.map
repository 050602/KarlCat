{"version":3,"file":"DateUtils.js","sourceRoot":"","sources":["../../src/utils/DateUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { format } from \"util\";\r\n\r\nexport interface FormatTimeDate {\r\n    year: number;\r\n    hours: number;\r\n    minutes: number;\r\n    seconds: number;\r\n    millSeconds: number;\r\n}\r\n\r\n\r\n/**\r\n* 时间工具\r\n* @author An\r\n*/\r\nexport class DateUtils {\r\n    // 删档后改为 2023年1月1日 0点0分的时间戳，需要前后端配合\r\n    public static cost20230101s: number = 1672502400;\r\n    public static cost20230101ms: number = DateUtils.cost20230101s * 1000;\r\n    //时间戳日期为周几，被安总坑过？懂，周日=0，需为上面日期的周几+1，\r\n    public static initPeriod: number = 0;\r\n\r\n    public static secOneMinute = 60; //一分的秒数\r\n    public static secOneHour = 60 * this.secOneMinute; //一个小时的秒数\r\n    public static sec5Hour = 5 * this.secOneHour; //一周的秒数\r\n    public static secOneDay = 24 * this.secOneHour; //一天的秒数\r\n    public static secOneWeek = 7 * this.secOneDay; //一周的秒数\r\n\r\n    public static secOffset: number = 0;\r\n    public static msOffset: number = this.secOffset * 1000;\r\n    /**\r\n     * 获取（指定）时间戳（毫秒）\r\n     * @static\r\n     * @param {*} data\r\n     * @return {*}  {number}\r\n     * @memberof DateUtils\r\n     */\r\n    public static getTimeEx(data: any): number {\r\n        let date: Date = new Date();\r\n        if (data) {\r\n            for (let key in data) {\r\n                let val = data[key];\r\n                switch (key) {\r\n                    case 'y':\r\n                        date.setFullYear(val)\r\n                        break;\r\n                    case 'h':\r\n                        date.setHours(val);\r\n                        break;\r\n                    case 'm':\r\n                        date.setMinutes(val);\r\n                        break;\r\n                    case 's':\r\n                        date.setSeconds(val);\r\n                        break;\r\n                    case 'ms':\r\n                        date.setMilliseconds(val);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        let msNewTime = date.getTime() + DateUtils.msOffset - DateUtils.cost20230101ms;\r\n        return msNewTime;\r\n    }\r\n\r\n    public static get sysTick(): number {\r\n        return Math.round(DateUtils.msSysTick * 0.001);\r\n    }\r\n\r\n    public static get msSysTick(): number {\r\n        let date: Date = new Date();\r\n        let msTime = date.getTime() + DateUtils.msOffset;\r\n        return msTime\r\n    }\r\n\r\n    /**\r\n  * 获取时间戳：逻辑时间戳\r\n  * @static\r\n  * @param {boolean} \r\n  * @param {*} data\r\n  * @return {*}  {number} 毫秒\r\n  * @memberof DateUtils\r\n  */\r\n    public static timestamp(): number {\r\n        let msTime = DateUtils.msSysTick - DateUtils.cost20230101ms;//1970年到2023年的毫秒差\r\n        return msTime;\r\n    }\r\n\r\n    /**\r\n     * 获取Unix时间戳\r\n     * @static\r\n     * @param {boolean} [returnMs=false] 返回秒\r\n     * @param {*} data\r\n     * @return {*}  {number}\r\n     * @memberof DateUtils\r\n     */\r\n    public static unixtime(): number {\r\n        let result: number = this.timestamp();\r\n        return Math.round(result * 0.001);\r\n    }\r\n\r\n    /**\r\n    * 格式化时间: 时:分:秒\r\n    * @param msec 毫秒\r\n    */\r\n    public static numberToTime1(ms: number) {\r\n        let sec = ms * 0.001;\r\n        let str = this.numberToTime2(sec);\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * @author An\r\n     * @param value 秒格式化\r\n     */\r\n    public static formatSeconds(value: number): string {\r\n        let secondTime = value; //parseInt(value);// 秒\r\n        let minuteTime = 0;// 分\r\n        let hourTime = 0;// 小时\r\n        if (secondTime >= 60) {\r\n            //如果秒数大于60，将秒数转换成整数\r\n            //获取分钟，除以60取整数，得到整数分钟\r\n            minuteTime = secondTime / 60;\r\n            //获取秒数，秒数取佘，得到整数秒数\r\n            secondTime = secondTime % 60;\r\n            //如果分钟大于60，将分钟转换成小时\r\n            if (minuteTime >= 60) {\r\n                //获取小时，获取分钟除以60，得到整数小时\r\n                hourTime = minuteTime / 60;\r\n                //获取小时后取佘的分，获取分钟除以60取佘的分\r\n                minuteTime = minuteTime % 60;\r\n            }\r\n        }\r\n\r\n        let hs = Math.floor(hourTime).toString();\r\n        let ms = Math.floor(minuteTime).toString();\r\n        let ss = Math.floor(secondTime).toString();\r\n        if (hourTime < 10)\r\n            hs = \"0\" + hs;\r\n        if (minuteTime < 10)\r\n            ms = \"0\" + ms;\r\n        if (secondTime < 10)\r\n            ss = \"0\" + ss;\r\n        let result = hs + \":\" + ms + \":\" + ss;\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 格式化时间: 时:分:秒\r\n     * @param sec 秒\r\n     */\r\n    public static numberToTime2(sec: number) {\r\n        let time_str = \"\";\r\n        let hour = Math.floor(sec / 3600);\r\n        time_str = hour < 10 ? 0 + hour.toString() + \":\" : hour.toString() + \":\";\r\n\r\n        let minute = Math.floor((sec % 3600) / 60);\r\n        time_str = minute < 10 ? time_str + 0 + minute.toString() + \":\" : time_str + minute.toString() + \":\";\r\n        let second = Math.ceil(sec % 60);\r\n        time_str = second < 10 ? time_str + 0 + second.toString() : time_str + second.toString();\r\n\r\n        return time_str;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n      * 根据开始时间和结束时间,判断当前时间是否在指定时间之内\r\n      * @author An\r\n      * @param TimeStamp 当前时间戳,请使用 DateUtils.timestamp()获取的时间戳来计算\r\n      * @param RangeArr 两个时间数组 如：[[23,45],[0,0]]  二维数组，数组左侧是小时，右侧是分钟\r\n      */\r\n    public static isInTheRange(msTimeStamp: number, RangeArr: Array<Array<any>>) {\r\n        let NowDate = new Date();\r\n        NowDate.setTime(msTimeStamp + DateUtils.cost20230101ms);\r\n        let minHour = RangeArr[0][0];\r\n        let minSec = RangeArr[0][1];\r\n        let maxHour = RangeArr[1][0];\r\n        let maxSec = RangeArr[1][1];\r\n\r\n        let d1 = new Date();\r\n        d1.setTime(msTimeStamp);\r\n        d1.setHours(minHour);\r\n        d1.setMinutes(minSec);\r\n\r\n        let d2 = new Date();\r\n        d2.setTime(msTimeStamp);\r\n        d2.setMinutes(maxSec);\r\n        if (minHour > maxHour) {\r\n            //跨天\r\n            d2.setHours(maxHour + 24);\r\n        } else {\r\n            d2.setHours(maxHour);\r\n        }\r\n\r\n        if (d1.valueOf() < msTimeStamp && d2.valueOf() > msTimeStamp) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 按需格式化日期\r\n     * @param NowTimeStamp \r\n     * @returns \r\n     */\r\n    public static getDateHourNowTimeStamp(msNowTimeStamp: number): string {\r\n        let tmpDate = new Date(msNowTimeStamp + DateUtils.cost20230101ms);\r\n        let month: number = tmpDate.getMonth() + 1;\r\n        let day: number = tmpDate.getDate();\r\n        let hour: number = tmpDate.getHours();\r\n\r\n        let stringDate: string = format('%d-', tmpDate.getFullYear());\r\n        stringDate = month < 10 ? stringDate + 0 + month.toString() + \"-\" : stringDate + month.toString() + \"-\";\r\n        stringDate = day < 10 ? stringDate + 0 + day.toString() + \"-\" : stringDate + day.toString() + \"-\";\r\n        stringDate = hour < 10 ? stringDate + 0 + hour.toString() : stringDate + hour.toString();\r\n        return stringDate;\r\n    }\r\n\r\n    /**\r\n     * 请使用 DateUtils.timestamp()获取的时间戳来计算\r\n     * 获取到指定日期00：00的毫秒数\r\n    **/\r\n    public static getRenainMilliSecond(msNowTimeStamp: number): number {\r\n        let tmpDate = new Date(msNowTimeStamp + DateUtils.cost20230101ms);\r\n        let ptime = (DateUtils.getTodayZeroMilliSecond(tmpDate) + 60 * 60 * 24) - tmpDate.getTime();\r\n        return ptime;\r\n    }\r\n\r\n    /**\r\n     * 请使用 DateUtils.timestamp()获取的时间戳来计算\r\n     * 今天已过去的秒数\r\n     **/\r\n    public static getTodayPassedSecond(msNowTimeStamp: number): number {\r\n        let tmpDate = new Date(msNowTimeStamp + DateUtils.cost20230101ms)\r\n        let tdyPassTime = ((tmpDate.getTime() - (new Date(tmpDate.getFullYear(), tmpDate.getMonth(), tmpDate.getDate()).getTime())));\r\n        return tdyPassTime;\r\n    }\r\n\r\n    /**\r\n     * 根据时间戳获取日期\r\n     * @param NowTimeStamp\r\n     * @returns \r\n     */\r\n    public static stampTimeData(msNowTimeStamp: number): Date {\r\n        let tmpDate = new Date(msNowTimeStamp + DateUtils.cost20230101ms);\r\n        return tmpDate;\r\n    }\r\n\r\n    /**\r\n     * 根据时间戳获取日期\r\n     * @param NowTimeStamp\r\n     * @returns \r\n     */\r\n    public static stampTimeDataSec(secNowTimeStamp: number): Date {\r\n        let tmpDate = DateUtils.stampTimeData(secNowTimeStamp * 1000);\r\n        return tmpDate;\r\n    }\r\n\r\n    /**\r\n     * 获取指定日期00:00时刻的秒数\r\n     * @parma 秒\r\n     * @returns {number}\r\n     */\r\n    public static getTodayZeroSecond(tdate?: any): number {\r\n        let tmpDate = tdate ? tdate : new Date();\r\n        return parseInt(((new Date(tmpDate.getFullYear(), tmpDate.getMonth(), tmpDate.getDate()).getTime()) / 1000).toFixed(0)) - DateUtils.cost20230101s;\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取今日00:00时刻的毫秒时间戳\r\n     * @parma 毫秒\r\n     * @returns {number}\r\n     */\r\n    public static getTodayZeroMilliSecond(tdate?: Date): number {\r\n        let tmpDate = tdate ? tdate : new Date();\r\n        let now = new Date(tmpDate.getFullYear(), tmpDate.getMonth(), tmpDate.getDate()).getTime();\r\n        now -= DateUtils.cost20230101ms;\r\n        return now;\r\n    }\r\n\r\n    /**\r\n     * 获取明日00:00时刻的时间戳\r\n     * @parma 毫秒\r\n     * @returns {number}\r\n     */\r\n    public static getTomorrowZeroMilliSecond(tdate?: Date): number {\r\n        let tmpDate = tdate ? tdate : new Date();\r\n        let msNow = new Date(tmpDate.getFullYear(), tmpDate.getMonth(), tmpDate.getDate()).getTime();\r\n        msNow += 24 * 60 * 60 * 1000;\r\n        msNow -= DateUtils.cost20230101ms;\r\n        return msNow;\r\n    }\r\n\r\n    /**\r\n     * 该方法需要修\r\n     * 获取本周第一天\r\n     * **/\r\n    // public static showWeekFirstDay(NowTimeStamp: number): any {\r\n    //     let Nowdate: any = new Date(NowTimeStamp + DateUtils.cost2020ms);\r\n    //     let day = Nowdate.getDay();\r\n    //     day = day ? day : 7\r\n    //     let WeekFirstDay = new Date(Nowdate - (day - 1) * 86400000);\r\n    //     // var M=Number(WeekFirstDay.getMonth())+1\r\n    //     // return WeekFirstDay.getYear()+\"-\"+M+\"-\"+WeekFirstDay.getDate();\r\n    //     return WeekFirstDay;\r\n    // }\r\n\r\n    /**\r\n     * 该方法需要修\r\n     * 获取本周最后一天\r\n     * @param 毫秒差\r\n     */\r\n    // public static showWeekLastDay(NowTimeStamp: number) {\r\n    //     // let Nowdate = new Date();\r\n    //     let WeekFirstDay = DateUtils.showWeekFirstDay(NowTimeStamp);\r\n    //     let WeekLastDay = new Date((WeekFirstDay + 6 * 86400000));\r\n    //     // let WeekLastDay = new Date((WeekFirstDay / 1000 + 6 * 86400) * 1000);\r\n    //     // var M=Number(WeekLastDay.getMonth())+1\r\n    //     // return WeekLastDay.getYear()+\"-\"+M+\"-\"+WeekLastDay.getDate();\r\n    //     return WeekLastDay;\r\n    // }\r\n\r\n    //请使用 DateUtils.timestamp()获取的时间戳来计算\r\n    //获取当月天数\r\n    public static GetMonthDayNum(msNowTimeStamp: number) {\r\n        let date = new Date(msNowTimeStamp + DateUtils.cost20230101ms);\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth() + 1;\r\n        let d = new Date(year, month, 0);\r\n        return d.getDate();\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取下个月一日0点的时间戳\r\n     * @param NowTimeStamp 请使用 DateUtils.timestamp()获取的时间戳来计算\r\n     * @returns \r\n     */\r\n    public static getNextMoonFirstDayZeroTimeStamp(msNowTimeStamp: number = null) {\r\n\r\n        let nowDate: Date;\r\n        if (msNowTimeStamp) {\r\n            nowDate = new Date(msNowTimeStamp + DateUtils.cost20230101ms);\r\n        } else {\r\n            nowDate = new Date();\r\n        }\r\n\r\n        let moon = nowDate.getMonth() + 1;\r\n        let year = nowDate.getFullYear();\r\n        // 新的一年\r\n        if (moon + 1 > 12) {\r\n            year += 1;\r\n            moon = 1;\r\n        }\r\n\r\n        let newDate = new Date(year, moon, 1, 0, 0, 1);\r\n        return newDate.getTime() - DateUtils.cost20230101ms;\r\n    }\r\n\r\n    /**\r\n     * 获取下个月一日0点的时间戳\r\n     * @param NowTimeStamp 请使用 DateUtils.timestamp()获取的时间戳来计算\r\n     * @returns \r\n     */\r\n    public static getNextMoonFirstDayZeroTimeStampSec(msNowTimeStamp: number = null) {\r\n        let ms = this.getNextMoonFirstDayZeroTimeStamp(msNowTimeStamp);\r\n        let sec = Math.round(ms * 0.001);\r\n        return sec;\r\n    }\r\n\r\n    /**\r\n   * 获取下周一一日0点的时间戳\r\n   * @param NowTimeStamp 请使用 DateUtils.timestamp()获取的时间戳来计算\r\n   * @returns \r\n   */\r\n    public static getNextWeekFirstDayZeroTimeStamp(msNowTimeStamp: number = null) {\r\n        let nowDate: Date;\r\n        if (msNowTimeStamp) {\r\n            nowDate = new Date(msNowTimeStamp + DateUtils.cost20230101ms);\r\n        } else {\r\n            nowDate = new Date();\r\n        }\r\n\r\n        let curDay = nowDate.getDay();\r\n        curDay = curDay > 0 ? curDay : 7;\r\n        let difday = 7 - curDay;//用\r\n        let hours = nowDate.getHours();\r\n        let minutes = nowDate.getMinutes();\r\n        let seconds = nowDate.getSeconds();\r\n        let sum = difday * 86400 * 1000 + 86400 * 1000 - (hours * 3600 * 1000 + minutes * 60 * 1000 + seconds * 1000);\r\n\r\n        let nextData: Date = new Date(nowDate.getTime() + sum);\r\n        return nextData.getTime() - DateUtils.cost20230101ms;\r\n    }\r\n\r\n    /**\r\n* 获取本周一一日0点的时间戳\r\n* @param NowTimeStamp 请使用 DateUtils.timestamp()获取的时间戳来计算\r\n* @returns \r\n*/\r\n    public static getWeekFirstDayZeroTimeStamp(msNowTimeStamp: number = null) {\r\n        let msTime = this.getNextWeekFirstDayZeroTimeStamp(msNowTimeStamp);\r\n        return msTime - 604800000;\r\n    }\r\n    /**\r\n     * 求出当前时间离下周一凌晨0点还差多少毫秒\r\n     * @param 毫秒差\r\n     * **/\r\n    public static calcWeekFirstDay() {\r\n        // var lastDay = showWeekLastDay().getDay();\r\n        // lastDay = lastDay > 0?lastDay:7;\r\n        let Nowdate = new Date();\r\n        let curDay = Nowdate.getDay();\r\n        curDay = curDay > 0 ? curDay : 7;\r\n        let difday = 7 - curDay;//用\r\n        let hours = Nowdate.getHours();\r\n        let minutes = Nowdate.getMinutes();\r\n        let seconds = Nowdate.getSeconds();\r\n        // logInfo(\"difday = \"+difday);\r\n        // logInfo(\"hours = \"+hours);\r\n        // logInfo(\"minutes = \"+minutes);\r\n        // logInfo(\"seconds = \"+seconds);\r\n        let msSum = difday * 86400 * 1000 + 86400 * 1000 - (hours * 3600 * 1000 + minutes * 60 * 1000 + seconds * 1000);\r\n        return msSum;\r\n    }\r\n\r\n\r\n    /**\r\n     * 格式化当前时间\r\n     * @param  time 请使用 DateUtils.timestamp()获取的时间戳来计算\r\n     * @returns String 2018年12月12日（周二） 12:12\r\n     */\r\n    public static formatFullTime(msTime: number): string {\r\n        let format: string;\r\n        let date: Date = new Date(msTime + DateUtils.cost20230101ms);\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n        let weekDay = date.getDay();\r\n        let hour = date.getHours();\r\n        let hourStr;\r\n        if (hour < 10) {\r\n            hourStr = \"0\" + hour;\r\n        }\r\n        else {\r\n            hourStr = hour.toString();\r\n        }\r\n        let min = date.getMinutes();\r\n        let minStr;\r\n        if (min < 10) {\r\n            minStr = \"0\" + min;\r\n        }\r\n        else {\r\n            minStr = min.toString();\r\n        }\r\n        let weekDayStr;\r\n        switch (weekDay) {\r\n            case 1:\r\n                weekDayStr = \"一\";\r\n                break;\r\n            case 2:\r\n                weekDayStr = \"二\";\r\n                break;\r\n            case 3:\r\n                weekDayStr = \"三\";\r\n                break;\r\n            case 4:\r\n                weekDayStr = \"四\";\r\n                break;\r\n            case 5:\r\n                weekDayStr = \"五\";\r\n                break;\r\n            case 6:\r\n                weekDayStr = \"六\";\r\n                break;\r\n            case 0:\r\n                weekDayStr = \"日\";\r\n                break;\r\n        }\r\n        format = year + \"年\" + month + \"月\" + day + \"日（周\" + weekDayStr + \"） \" + hourStr + \":\" + minStr;\r\n        return format;\r\n    }\r\n\r\n    /**\r\n  * 格式化当前时间\r\n  * @returns String 2023-03-20-12-27\r\n  */\r\n    public static formatFullTimeByNow(split: string = null): string {\r\n        let format: string;\r\n        let date: Date = new Date();\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n        // let weekDay = date.getDay();\r\n\r\n        let monthStr: string;\r\n        if (month < 10) {\r\n            monthStr = \"0\" + month;\r\n        } else {\r\n            monthStr = month.toString();\r\n        }\r\n\r\n        let dayStr: string;\r\n        if (day < 10) {\r\n            dayStr = \"0\" + day;\r\n        } else {\r\n            dayStr = day.toString();\r\n        }\r\n\r\n        let hour = date.getHours();\r\n        let hourStr: string;\r\n        if (hour < 10) {\r\n            hourStr = \"0\" + hour;\r\n        } else {\r\n            hourStr = hour.toString();\r\n        }\r\n        let min = date.getMinutes();\r\n        let minStr: string;\r\n        if (min < 10) {\r\n            minStr = \"0\" + min;\r\n        }\r\n        else {\r\n            minStr = min.toString();\r\n        }\r\n        // let weekDayStr;\r\n        // switch (weekDay) {\r\n        //     case 1:\r\n        //         weekDayStr = \"一\";\r\n        //         break;\r\n        //     case 2:\r\n        //         weekDayStr = \"二\";\r\n        //         break;\r\n        //     case 3:\r\n        //         weekDayStr = \"三\";\r\n        //         break;\r\n        //     case 4:\r\n        //         weekDayStr = \"四\";\r\n        //         break;\r\n        //     case 5:\r\n        //         weekDayStr = \"五\";\r\n        //         break;\r\n        //     case 6:\r\n        //         weekDayStr = \"六\";\r\n        //         break;\r\n        //     case 0:\r\n        //         weekDayStr = \"日\";\r\n        //         break;\r\n        // }\r\n        if (split != null) {\r\n            format = year + split + monthStr + split + dayStr + split + hourStr + split + minStr;\r\n        } else {\r\n            format = year + monthStr + dayStr + hourStr + minStr;\r\n        }\r\n\r\n        return format;\r\n    }\r\n\r\n\r\n    /**\r\n * 格式化当前时间\r\n * @param  time 请使用 DateUtils.timestamp()获取的时间戳来计算\r\n * @returns String 12月12日 12:12\r\n */\r\n    public static formatFullTime2(msTime: number): string {\r\n        let format: string;\r\n        let date: Date = new Date(msTime + DateUtils.cost20230101ms);\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n        // let weekDay = date.getDay();\r\n        let hour = date.getHours();\r\n        let hourStr: string;\r\n        if (hour < 10) {\r\n            hourStr = \"0\" + hour;\r\n        }\r\n        else {\r\n            hourStr = hour.toString();\r\n        }\r\n        let min = date.getMinutes();\r\n        let minStr: string;\r\n        if (min < 10) {\r\n            minStr = \"0\" + min;\r\n        }\r\n        else {\r\n            minStr = min.toString();\r\n        }\r\n        format = month + \"月\" + day + \"日 \" + hourStr + \":\" + minStr;\r\n        // format = month + \"月\" + day + \"日 \" + hourStr + \":\" + minStr + \":\" + date.getSeconds() + \":\" + date.getMilliseconds();\r\n        return format;\r\n    }\r\n\r\n\r\n\r\n\r\n    /**格式化时间  格式： y年 初始值为1\r\n     * @param time 时间\r\n     * @returns xxx年\r\n    */\r\n    //  public static FormatTime(time: number) {\r\n    //     let d = new Date(time);\r\n    //     return Lang.getLang(37, 1 + (d.getFullYear() - 1970));//从1970年开始，所以需要减掉1970\r\n    // }\r\n\r\n    /**格式化时间  格式： h小时m分钟s秒\r\n     * @param time 时间\r\n     * @returns 数组 [h,m,s]\r\n    */\r\n    public static formatTime2(msTime: number): number[] {\r\n        let d = Math.floor(msTime * 0.001);//取s为单位\r\n        let hour = Math.floor(d / 3600);//获取小时数\r\n        let day = Math.floor(hour / 24);//获取天数\r\n        let min = Math.floor(d % 3600 / 60);//获取分钟数\r\n        let sec = d % 3600 % 60;//获取秒数\r\n        // return [day, hour, min, sec];\r\n        return [hour, min, sec];\r\n    }\r\n\r\n    /**格式化天数\r\n    * @param time 时间 毫秒\r\n    * @returns 天数\r\n    */\r\n    public static formatTime3(msTime: number): number {\r\n        let d = Math.floor(msTime * 0.001);//取s为单位\r\n        let hour = Math.floor(d / 3600);//获取小时数\r\n        let day = Math.floor(hour / 24);//获取天数\r\n        return day;\r\n    }\r\n\r\n\r\n    /**当前几点\r\n    * @param time 时间 毫秒\r\n    * @returns 天数\r\n    */\r\n    public static formatTime4(msTime: number): number {\r\n        let d = Math.floor(msTime * 0.001);//取s为单位\r\n        let hour = Math.floor(d / 3600);//获取小时数\r\n        let day = Math.floor(hour / 24);//获取天数\r\n        let clock = Math.floor((msTime - day * 86400000) / 3600000)\r\n        return clock;\r\n    }\r\n\r\n    /**获得本周周几，0为周日\r\n    * @param day :时间戳天数\r\n    * @returns 周几\r\n    */\r\n    public static getWeekFromPeriod(day: number): number {\r\n        let data = (day + DateUtils.initPeriod) % 7\r\n        if (data == 0) {\r\n            data = 7\r\n        }\r\n        return data\r\n    }\r\n\r\n    public static formatFullTime4(msTime: number): string {\r\n        let format: string;\r\n        let date: Date = new Date(msTime + DateUtils.cost20230101ms);\r\n        let hour = date.getHours();\r\n        let hourStr: string;\r\n        if (hour < 10) {\r\n            hourStr = \"0\" + hour;\r\n        }\r\n        else {\r\n            hourStr = hour.toString();\r\n        }\r\n        let min = date.getMinutes();\r\n        let minStr;\r\n        if (min < 10) {\r\n            minStr = \"0\" + min;\r\n        }\r\n        else {\r\n            minStr = min.toString();\r\n        }\r\n\r\n        let Seconds = date.getSeconds();\r\n        let SecondsStr: string;\r\n        if (Seconds < 10) {\r\n            SecondsStr = \"0\" + Seconds;\r\n        }\r\n        else {\r\n            SecondsStr = Seconds.toString();\r\n        }\r\n\r\n\r\n        let ms = date.getMilliseconds();\r\n        let msStr;\r\n        if (ms < 10) {\r\n            msStr = \"0\" + ms;\r\n        }\r\n        else {\r\n            msStr = ms.toString();\r\n        }\r\n        format = hourStr + \":\" + minStr + \":\" + SecondsStr + \":\" + msStr;\r\n        // format = month + \"月\" + day + \"日 \" + hourStr + \":\" + minStr + \":\" + date.getSeconds() + \":\" + date.getMilliseconds();\r\n        return format;\r\n    }\r\n\r\n    //此处直接使用传入的Time\r\n    public static formatFullTime5(msTime: number): string {\r\n        let format: string;\r\n        let date: Date = new Date(msTime);\r\n        let year = date.getFullYear();\r\n        let month = date.getMonth() + 1;\r\n        let day = date.getDate();\r\n\r\n        let monthStr: string;\r\n        if (month < 10) {\r\n            monthStr = \"0\" + month;\r\n        } else {\r\n            monthStr = month.toString();\r\n        }\r\n\r\n        let dayStr: string;\r\n        if (day < 10) {\r\n            dayStr = \"0\" + day;\r\n        } else {\r\n            dayStr = day.toString();\r\n        }\r\n        let hour = date.getHours();\r\n        let hourStr: string;\r\n        if (hour < 10) {\r\n            hourStr = \"0\" + hour;\r\n        }\r\n        else {\r\n            hourStr = hour.toString();\r\n        }\r\n        let min = date.getMinutes();\r\n        let minStr;\r\n        if (min < 10) {\r\n            minStr = \"0\" + min;\r\n        }\r\n        else {\r\n            minStr = min.toString();\r\n        }\r\n\r\n        let Seconds = date.getSeconds();\r\n        let SecondsStr: string;\r\n        if (Seconds < 10) {\r\n            SecondsStr = \"0\" + Seconds;\r\n        }\r\n        else {\r\n            SecondsStr = Seconds.toString();\r\n        }\r\n\r\n        let ms = date.getMilliseconds();\r\n        let msStr;\r\n        if (ms < 10) {\r\n            msStr = \"0\" + ms;\r\n        }\r\n        else {\r\n            msStr = ms.toString();\r\n        }\r\n        // format = hourStr + \":\" + minStr + \":\" + SecondsStr + \":\" + msStr;\r\n        format = year + \"年\" + monthStr + \"月\" + dayStr + \"日 \" + hourStr + \":\" + minStr + \":\" + SecondsStr + \":\" + msStr;\r\n        return format;\r\n    }\r\n\r\n\r\n    //钟数,nextTime:下个小时的某个时间点（输入毫秒数），默认为整点\r\n    public static getNextClock(msNextTime: number = 0): number {\r\n        let nowTime = DateUtils.timestamp();\r\n        // let d = Math.floor(nowTime * 0.001);//取s为单位\r\n        let Nexthour = Math.ceil(nowTime / 3600000);//获取小时数\r\n        let time = Nexthour * 3600000 + msNextTime\r\n        return time\r\n    }\r\n\r\n\r\n    /**\r\n    * 判断本日是否有开启该活动\r\n    * @param list 开启日\r\n    * 经验证会导致宝箱奖励有问题，暂时注释掉了，以后找机会起复\r\n    */\r\n    public static judgeTodayCanJoin(list: number[]): boolean {\r\n        let nowTime = DateUtils.timestamp();//现在时间\r\n        let today = DateUtils.formatTime3(nowTime);//今天是多少号\r\n        let week = DateUtils.getWeekFromPeriod(today);\r\n        if (list.indexOf(week) < 0) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n}\r\n"]}