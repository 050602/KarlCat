{"version":3,"file":"CMDMonitor.js","sourceRoot":"","sources":["../../src/utils/CMDMonitor.ts"],"names":[],"mappings":";;;AAAA,oCAAyC;AACzC,gCAA6B;AAC7B,+CAA4C;AAC5C,2CAAwC;AAExC,MAAa,UAAW,SAAQ,mBAAQ;IAAxC;;QAaI,sCAAsC;QAC9B,aAAQ,GAAmC,IAAI,GAAG,EAAE,CAAC;IA4CjE,CAAC;IAzDU,MAAM,KAAK,QAAQ;QACtB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAEM,KAAK,CAAC,YAAY;QACrB,IAAI,CAAC,SAAS,EAAE,CAAA;IACpB,CAAC;IAEM,eAAe;IAEtB,CAAC;IAIM,iBAAiB,CAAC,IAAqB,EAAE,IAAY;QACxD,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QAClC,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;SACjD;aACI;YACD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACV,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;YAChB,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;gBAChB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aAClB;YACD,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE;gBAChB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;aAClB;SACJ;IACL,CAAC;IAEM,SAAS;QACZ,4CAA4C;QAC5C,WAAW,CAAC,GAAG,EAAE;YACb,0DAA0D;YAC1D,IAAI,OAAO,GAAW,qBAAS,CAAC,mBAAmB,EAAE,CAAC;YACtD,IAAI,MAAM,GAAW,GAAG,OAAO,0DAA0D,CAAC;YAC1F,qFAAqF;YAGrF,IAAA,qBAAa,EAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YACnC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE;gBACtC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,IAAI,GAAW,OAAO,GAAG,MAAM,GAAG,SAAG,CAAC,UAAU,CAAC,UAAU,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAExM,6LAA6L;gBAC7L,IAAA,qBAAa,EAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAEjC,wHAAwH;aAC3H;YACD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtB,IAAA,qBAAa,EAAC,WAAW,EAAE,EAAE,CAAC,CAAC;YAC/B,IAAA,qBAAa,EAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QACnC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;IAEtB,CAAC;CAEJ;AA1DD,gCA0DC","sourcesContent":["import { logCmdMonitor } from \"../LogTS\";\r\nimport { app } from \"../app\";\r\nimport { Sigleton } from \"../core/Sigleton\";\r\nimport { DateUtils } from \"./DateUtils\";\r\n\r\nexport class CMDMonitor extends Sigleton {\r\n    public static get Instance(): CMDMonitor {\r\n        return this.getInstance();\r\n    }\r\n\r\n    public async initInstance() {\r\n        this.setTiming()\r\n    }\r\n\r\n    public destoryInstance(): void {\r\n\r\n    }\r\n\r\n    //number[]定义：0:次数， 1：总时长 2：最大时长,3:最小时长\r\n    private cmdCount: Map<number | string, number[]> = new Map();\r\n    public setAndAddCmdCount(name: number | string, time: number) {\r\n        let data = this.cmdCount.get(name)\r\n        if (!data) {\r\n            this.cmdCount.set(name, [1, time, time, time])\r\n        }\r\n        else {\r\n            data[0]++;\r\n            data[1] += time;\r\n            if (data[2] < time) {\r\n                data[2] = time;\r\n            }\r\n            if (data[3] > time) {\r\n                data[3] = time;\r\n            }\r\n        }\r\n    }\r\n\r\n    public setTiming() {\r\n        // let time = DateUtils.timestamp() + 300000\r\n        setInterval(() => {\r\n            // errLog(\"cmdName    次数    总时长    最大时长    最小时长    平均时长\");\r\n            let nowData: string = DateUtils.formatFullTimeByNow();\r\n            let cmdLog: string = `${nowData}    服务器名    cmdName    次数    总时长    最大时长    最小时长    平均时长`;\r\n            // let cmdLog: string = \"服务器名/\\t/gcmdName/\\t/g次数/\\t/g总时长/\\t/g最大时长/\\t/g最小时长/\\t/g平均时长\";\r\n\r\n\r\n            logCmdMonitor(\"Monitor5m\", cmdLog);\r\n            for (let key2 of this.cmdCount.entries()) {\r\n                let data = key2[1];\r\n                let line: string = nowData + \"    \" + app.serverInfo.serverName + \"    \" + key2[0] + \"    \" + data[0] + \"    \" + data[1] + \"    \" + data[2] + \"    \" + data[3] + \"    \" + Math.floor(data[1] / data[0]);\r\n\r\n                //let line: string = app.serverInfo.serverName + \"/\\t/g\" + key2[0] + \"/\\t/g\" + data[0] + \"/\\t/g\" + data[1] + \"/\\t/g\" + data[2] + \"/\\t/g\" + data[3] + \"/\\t/g\" + Math.floor(data[1] / data[0]);\r\n                logCmdMonitor(\"Monitor5m\", line);\r\n\r\n                // errLog(key2[0] + \" \" + data[0] + \" \" + data[1] + \" \" + data[2] + \" \" + data[3] + \" \" + Math.floor(data[1] / data[0]))\r\n            }\r\n            this.cmdCount.clear();\r\n            logCmdMonitor(\"Monitor5m\", \"\");\r\n            logCmdMonitor(\"Monitor5m\", \"\");\r\n        }, 5 * 60 * 1000);\r\n\r\n    }\r\n\r\n}\r\n\r\n"]}