{"version":3,"file":"CoroutineLock.js","sourceRoot":"","sources":["../../src/utils/CoroutineLock.ts"],"names":[],"mappings":";;;AAAA,2CAAwC;AAQxC,MAAa,aAAa;IAA1B;QACY,UAAK,GAAY,KAAK,CAAC;QACvB,cAAS,GAAoB,EAAE,CAAC;IAiE5C,CAAC;IA/DU,KAAK,CAAC,IAAI;QACb,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,GAAG,GAAG,qBAAS,CAAC,SAAS,EAAE,CAAC;YAChC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;YAE3B,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBAClC,IAAI,IAAI,GAAa;oBACjB,OAAO,EAAE,OAAO;oBAChB,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,GAAG;iBACZ,CAAA;gBACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAA;YACF,8CAA8C;YAC9C,mDAAmD;YACnD,MAAM;SACT;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IAEM,MAAM;QACT,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAClC,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC3B,OAAO,IAAI,OAAO,EAAE,CAAC;YAErB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB;iBAAM;gBACH,IAAI,GAAG,GAAG,qBAAS,CAAC,SAAS,EAAE,CAAC;gBAChC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;aAC9B;SACJ;aAAM;YACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;IACL,CAAC;IAEO,gBAAgB,CAAC,GAAW;QAChC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACvB,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,GAAG,GAAG,SAAS,CAAC,IAAI,GAAG,KAAK,EAAE;gBAC9B,WAAW;gBACX,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;gBACnC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;oBACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;iBACtB;qBAAM;oBACH,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;iBAC9B;aACJ;SACJ;IACL,CAAC;IAEM,KAAK;QACR,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACzB,MAAM,IAAI,MAAM,CAAC,gBAAgB,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;CAEJ;AAnED,sCAmEC","sourcesContent":["import { DateUtils } from \"./DateUtils\";\r\n\r\ninterface LockInfo {\r\n    resolve: Function,\r\n    reject: Function,\r\n    time: number\r\n}\r\n\r\nexport class CoroutineLock {\r\n    private _lock: boolean = false;\r\n    private _waitList: Array<LockInfo> = [];\r\n\r\n    public async lock() {\r\n        if (this._lock) {\r\n            let now = DateUtils.timestamp();\r\n            this.checkReleaseLock(now);\r\n\r\n            await new Promise((resolve, reject) => {\r\n                let info: LockInfo = {\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                    time: now,\r\n                }\r\n                this._waitList.push(info);\r\n            })\r\n            // .catch((error) => {//使用catch不会中止方法，还是需要把它抛出\r\n            //     console.log(\"CoroutineLock reject:\", error);\r\n            // });\r\n        }\r\n        this._lock = true;\r\n    }\r\n\r\n    public unlock() {\r\n        if (this._waitList.length > 0) {\r\n            let info = this._waitList.shift();\r\n            let resolve = info.resolve;\r\n            resolve && resolve();\r\n\r\n            if (!this._waitList.length) {\r\n                this._lock = false;\r\n            } else {\r\n                let now = DateUtils.timestamp();\r\n                this.checkReleaseLock(now);\r\n            }\r\n        } else {\r\n            this._lock = false;\r\n        }\r\n    }\r\n\r\n    private checkReleaseLock(now: number) {\r\n        if (this._waitList.length) {\r\n            let fristInfo = this._waitList[0];\r\n            if (now - fristInfo.time > 20000) {\r\n                // 20秒后自动释放\r\n                this._waitList.shift();\r\n                fristInfo.reject(\"timeout reject\");\r\n                if (!this._waitList.length) {\r\n                    this._lock = false;\r\n                } else {\r\n                    this.checkReleaseLock(now);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public clear() {\r\n        for (let i = 0; i < this._waitList.length; i++) {\r\n            let info = this._waitList[i];\r\n            let reject = info.reject;\r\n            reject && reject(\"clear cmd lock\");\r\n        }\r\n        this._waitList.length = 0;\r\n        this._lock = false;\r\n    }\r\n\r\n}\r\n\r\n"]}