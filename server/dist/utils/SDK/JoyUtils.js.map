{"version":3,"file":"JoyUtils.js","sourceRoot":"","sources":["../../../src/utils/SDK/JoyUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import urllib from 'urllib';\r\nimport { errLog, logInfo } from \"../../LogTS\";\r\nimport { BigServerId } from \"../../app\";\r\nimport { LoginResultCode } from \"../../config/LoginResultCode\";\r\nimport { CommonUtils } from \"../CommonUtils\";\r\nimport { DateUtils } from \"../DateUtils\";\r\nconst AppID = \"23033101\";\r\nconst AppKey = \"5a5124ec396515f8a7a77e197a91b513\";\r\nconst AppSeret = \"28bcc638c4a22b71644c7890b436f733\";\r\n\r\nexport class JoyUtils {\r\n\r\n\r\n    //return  子渠道名+\"_\"+username\r\n    public static async getToken(channelID: string, subChannelID: string, token: string, commonData: string, sdkUid: string, ip: string, userAgent?: string): Promise<[number, string, string]> {\r\n        let signature = CommonUtils.getMD5(AppID + channelID + token + AppSeret);\r\n        let content = `action=verifyAccount&appID=${AppID}&channelID=${channelID}&subChannelID=${subChannelID}&token=${token}&signature=${signature}&commonData=${commonData}&sdkUid=${sdkUid}&ip=${ip}`;\r\n        if (userAgent) {\r\n            content += `&userAgent=${userAgent}`;\r\n        }\r\n        let headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Content-Length': Buffer.byteLength(content).toString(),\r\n        }\r\n\r\n        let baseUrl = \"http://serverapi.15166.com/user\";\r\n        let data = await urllib.request(baseUrl, { method: \"POST\", headers: headers, dataType: 'json', data: content });\r\n        logInfo(data);\r\n        if (data.statusCode == 200) {\r\n            // {\r\n            //     \"result\": 1,\r\n            //     \"msg\": \"验证成功\",\r\n            //     \"code\": 1,\r\n            //     \"data\": {\r\n            //       \"uid\": \"1\",\r\n            //       \"username\": \"2685219289.zyzs\",\r\n            //       \"sdkUid\": \"2685219289\"\r\n            //     }\r\n            //   }\r\n            // if (data.data.code == 1) { 昌兴说不用管code了\r\n            if (data.data.result == 1) {\r\n                return [LoginResultCode.Succeed, /**subChannelID + \"_\" +**/ data.data.data.username, data.data.data.uid];\r\n            } else {\r\n                return [LoginResultCode.JoyTokenInvalid, sdkUid, \"0\"];\r\n            }\r\n            // } else {\r\n            //     return [LoginResultCode.JoyTokenFail, sdkUid];\r\n            // }\r\n        }\r\n        return [LoginResultCode.Fail, sdkUid, \"0\"];\r\n    }\r\n\r\n\r\n    public static async loginUpLog(type: number, channelID: string, subChannelID: string, roleUid: number, unixTimestamp: number, commonData: string, sdkUid: string, ip: string, sessionId: number): Promise<void> {\r\n        let signature = CommonUtils.getMD5(AppID + AppSeret);\r\n        //TODO这是一个数组，可以考虑等到多一点的时候才上报\r\n        let attachObj = [{\r\n            type: type,//0下线 1 上线\r\n            uid: sdkUid,//sdkUid\r\n            channelID: channelID,\r\n            subChannelID: subChannelID,\r\n            timestamp: unixTimestamp + DateUtils.cost20230101s,\r\n            serverID: BigServerId,\r\n            ip: ip,\r\n            commonData: commonData,\r\n            sessionID: sessionId,\r\n        }]\r\n        let attach = JSON.stringify(attachObj);\r\n        // let content = {\r\n        //     appID: AppID,\r\n        //     signature: signature,\r\n        //     attach: attachObj,\r\n        // }\r\n        let content = `appID=${AppID}&signature=${signature}&attach=${attach}`;\r\n\r\n        logInfo(\"POST BODY:\", content);\r\n        let headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Content-Length': Buffer.byteLength(content).toString(),\r\n        }\r\n        let baseUrl = \"http://sdklog.15166.com/fcm/behavior/index\";\r\n        let data = await urllib.request(baseUrl, { method: \"POST\", headers: headers, dataType: 'json', data: content });\r\n        logInfo(data);\r\n        if (data.statusCode == 200) {\r\n            // {\r\n            //     \"msg\": \"上报成功\",\r\n            //     \"code\": 0\r\n            //   }\r\n            // {\r\n            //     \"msg\": \"上报失败\",\r\n            //     \"code\": 1\r\n            //   }\r\n            if (data.data.code == 1) {\r\n                errLog(\"JoySDK UpLoginLogs Fail\", data.data.msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static async doChargeOrder(channelID: string, subChannelID: string, token: string, commonData: string, sdkUid: string, ip: string, userID: string, username: string, roleID: string, roleName: string, roleLevel: number, money: number, coin: number, currency = \"RMB\", productID: string, productName: string, productDesc: string, sdkVersion: string, sdkExtension: string, packageVersion: string, extension: string, cpOrderID: string, signType: string = \"MD5\"): Promise<{ orderID: string, extension: string }> {\r\n        let time = (DateUtils.unixtime() + DateUtils.cost20230101s).toString();\r\n        let signature = CommonUtils.getMD5(AppID + BigServerId.toString() + time + AppSeret);\r\n        let content = `action=getOrderID&appID=${AppID}&channelID=${channelID}&subChannelID=${subChannelID}&token=${token}&signature=${signature}&commonData=${commonData}&sdkUid=${sdkUid}&payIp=${ip}&userID=${userID}&username=${username}&roleID=${roleID}&serverID=${BigServerId}&serverName=${BigServerId}&money=${money}&coin=${coin}&currency=${currency}&productID=${productID}&productName=${productName}&productDesc=${productDesc}&sdkVersion=${sdkVersion}&packageVersion=${packageVersion}&extension=${extension}&roleName=${roleName}&roleLevel=${roleLevel}&cpOrderID=${cpOrderID}&signType=${signType}`;\r\n        let headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Content-Length': Buffer.byteLength(content).toString(),\r\n        }\r\n\r\n        let baseUrl = \"http://serverapi.15166.com/pay\";\r\n        let data = await urllib.request(baseUrl, { method: \"POST\", headers: headers, dataType: 'json', data: content });\r\n        if (data.statusCode == 200) {\r\n            if (data.data.code == 1) {\r\n                return data.data.data;\r\n            }\r\n        }\r\n        errLog(\"doChargeOrder error\", roleID, data);\r\n        return null;\r\n    }\r\n\r\n\r\n    public static async serverErrorUpLog(): Promise<void> {\r\n        let time = (DateUtils.unixtime() + DateUtils.cost20230101s).toString();\r\n        let signature = CommonUtils.getMD5(AppID + BigServerId.toString() + time + AppSeret);\r\n        let content = `appID=${AppID}&serverID=${BigServerId}&timestamp=${time}&signature=${signature}`;\r\n        let headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Content-Length': Buffer.byteLength(content).toString(),\r\n        }\r\n\r\n        let baseUrl = \"http://sdklog.15166.com/fcm/notice/index\";\r\n        let data = await urllib.request(baseUrl, { method: \"POST\", headers: headers, dataType: 'json', data: content });\r\n        logInfo(data);\r\n        if (data.statusCode == 200) {\r\n            // {\r\n            //     \"msg\": \"上报成功\",\r\n            //     \"code\": 0\r\n            //   }\r\n            // {\r\n            //     \"msg\": \"上报失败\",\r\n            //     \"code\": 1\r\n            //   }\r\n            if (data.data.code > 0) {\r\n                errLog(\"JoySDK serverErrorUpLog Fail\", data.data.code, data.data.msg);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}