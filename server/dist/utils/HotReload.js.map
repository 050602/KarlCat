{"version":3,"file":"HotReload.js","sourceRoot":"","sources":["../../src/utils/HotReload.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as vm from \"vm\";\r\nimport { app, isDebug } from \"../app\";\r\nimport { BaseServerLogic } from \"../components/BaseServerLogic\";\r\nimport { RpcEvent } from \"../event/RpcEvent\";\r\nimport { RegisterSigleton } from \"../register/RegisterSigleton\";\r\nimport { ServerType } from \"../register/route\";\r\nimport { CoroutineLock } from \"./CoroutineLock\";\r\nimport { DateUtils } from \"./DateUtils\";\r\nimport { FileUtils } from \"./FileUtils\";\r\nimport { TSEventCenter } from \"./TSEventCenter\";\r\n\r\nconst hotScriptPath = path.join(__dirname, \"../\");\r\n\r\n//需要热更新功能，请调用以下的 HotReload.loadHandler \r\nexport class HotReload extends BaseServerLogic {\r\n\tpublic static get Instance(): HotReload {\r\n\t\treturn this.getInstance();\r\n\t}\r\n\r\n\tprivate timerId: NodeJS.Timeout;\r\n\t//当实例初始化时\r\n\tpublic initInstance() {\r\n\t\tif (isDebug) {\r\n\t\t\tthis.watchFile();\r\n\t\t}\r\n\r\n\t\tif (!isDebug) {\r\n\t\t\t//自动GC\r\n\t\t\tthis.timerId = setInterval(() => {\r\n\t\t\t\tlet last = Date.now();\r\n\t\t\t\tglobal.gc();\r\n\t\t\t\tconsole.log(\"gc Time(ms):\", Date.now() - last);\r\n\t\t\t}, 10 * 60 * 1000);\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//当实例被销毁时\r\n\tpublic destoryInstance() {\r\n\t\tTSEventCenter.Instance.unbind(RpcEvent.OnHotReload, this);\r\n\t\tif (this.timerId != null) {\r\n\t\t\tclearInterval(this.timerId);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tpublic lock: Map<string, number>;\r\n\tpublic jsFile: Map<string, string>;\r\n\tprivate coroutineLock: CoroutineLock;\r\n\t//以下代码用于热重载\r\n\tprivate async watchFile() {\r\n\t\tif (app.serverType == ServerType.master) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.coroutineLock = new CoroutineLock();\r\n\t\tlet _fileList = [];\r\n\t\tlet _sheetFileExts: string[] = [\".js\"];\r\n\t\tthis.jsFile = new Map();\r\n\t\tFileUtils.findFile(\"./dist/servers\", _sheetFileExts, _fileList);\r\n\t\tfor (let n = 0; n < _fileList.length; n++) {\r\n\t\t\tlet filePath: string = _fileList[n];\r\n\t\t\tlet text: string = await FileUtils.readFile(filePath);\r\n\t\t\tthis.jsFile.set(filePath, text);\r\n\t\t}\r\n\t\t_fileList.length = 0;\r\n\r\n\t\tFileUtils.findFile(\"./dist/modelLogic\", _sheetFileExts, _fileList);\r\n\t\tfor (let n = 0; n < _fileList.length; n++) {\r\n\t\t\tlet filePath: string = _fileList[n];\r\n\t\t\tlet text: string = await FileUtils.readFile(filePath);\r\n\t\t\tthis.jsFile.set(filePath, text);\r\n\t\t}\r\n\r\n\t\tthis.lock = new Map();\r\n\t\tlet flag = true; //作为开关控制是否开启编译\r\n\t\tlet t = fs.watch('./dist', {\r\n\t\t\trecursive: true\r\n\t\t}, ((event, filename) => {\r\n\t\t\tif (!filename) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet func = async () => {\r\n\t\t\t\tawait this.coroutineLock.lock();\r\n\t\t\t\ttry {\r\n\t\t\t\t\tflag = true;\r\n\t\t\t\t\tif (filename.endsWith('js')) {\r\n\t\t\t\t\t\tflag = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst regex = /servers\\\\/;\r\n\t\t\t\t\tconst regex2 = /modelLogic\\\\/;\r\n\t\t\t\t\tif (regex.test(filename) || regex2.test(filename)) {\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// console.log(\"不需要处理的文件\", filename);\r\n\t\t\t\t\t\tthis.coroutineLock.unlock();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (flag) {\r\n\t\t\t\t\t\tthis.coroutineLock.unlock();\r\n\t\t\t\t\t\treturn //如果当前文件不是ts文件则不进行编译\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// console.log(`检测到文件变化.....变化类型为${event}文件名字是${filename}`);\r\n\t\t\t\t\tlet now = DateUtils.timestamp();\r\n\t\t\t\t\tlet lock = this.lock.get(filename);\r\n\t\t\t\t\tif (lock) {\r\n\t\t\t\t\t\tlet cha = now - lock;\r\n\t\t\t\t\t\t//5秒CD\r\n\t\t\t\t\t\t// console.log(\"cha\", cha);\r\n\t\t\t\t\t\tif (cha < 5000) {\r\n\t\t\t\t\t\t\tthis.coroutineLock.unlock();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tlet file = await FileUtils.readFile(hotScriptPath + filename);\r\n\t\t\t\t\tlet lastFile = this.jsFile.get(\"dist\\\\\" + filename);\r\n\t\t\t\t\tif (lastFile != file) {\r\n\t\t\t\t\t\tthis.makeHotReload(hotScriptPath + filename);\r\n\t\t\t\t\t\tthis.jsFile.set(filename, file);\r\n\t\t\t\t\t\t// console.log(app.serverInfo.serverName, \"文件真的发生了变化\", filename);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.lock.set(filename, now);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t}\r\n\t\t\t\tthis.coroutineLock.unlock();\r\n\t\t\t}\r\n\t\t\tfunc();\r\n\r\n\r\n\t\t}))\r\n\t}\r\n\r\n\t//以下代码用于热重载\r\n\tprivate makeHotReload(filename: string) { //编译方法\r\n\t\t// console.log(filename + '文件已被编译');\r\n\t\tlet regex = /(\\w+\\.js)/;\r\n\t\tlet match = filename.match(regex);\r\n\t\tif (match) {\r\n\t\t\tlet fileName2 = match[1];\r\n\t\t\t// console.log(fileName2); // 输出：FightClient.js\r\n\t\t\tlet insName = fileName2.split(\".\")[0];\r\n\t\t\tlet path = filename.split(\".\")[0];\r\n\t\t\t//判断是否有实例，没有实例就别瞎几把处理了\r\n\t\t\tlet ins = app.InstanceMap.get(insName);\r\n\t\t\tif (ins) {\r\n\t\t\t\tHotReload.loadHandler(path, insName);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// 热更新指定代码\r\n\tpublic static loadHandler(filename: string, insName: string) {\r\n\t\tlet newPath = filename + \".js\"\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tfs.readFile(newPath, async (err, data: any) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tconsole.error(\"热更新加载文件失败\", err);\r\n\t\t\t\t\tconsole.log(\"热更新加载代码文件失败\", filename, insName, err);\r\n\t\t\t\t\tresolve(null);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// 使用vm模块的Script方法来预编译发生变化后的文件代码，检查语法错误，提前发现是否存在语法错误等报错\r\n\t\t\t\t\t\tnew vm.Script(data);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t// 语法错误,编译失败\r\n\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 编译通过后，重新require加载最新的代码 doUpdateScript里有执行了resolve 不需要在此执行\r\n\t\t\t\t\t// resolve(require(newPath));\r\n\r\n\t\t\t\t\tthis.doUpdateScript(newPath, insName);\r\n\t\t\t\t\tRegisterSigleton.onHotReload(newPath, insName);\r\n\r\n\t\t\t\t\t// resolve(require(newPath));\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tprivate static async doUpdateScript(filename: string, insName: string) {\r\n\t\tlet ins = app.InstanceMap.get(insName);\r\n\t\tif (ins) {\r\n\t\t\tins.destoryInstance();\r\n\t\t\tins._instance = null;\r\n\t\t\tapp.InstanceMap.delete(insName);\r\n\t\t} else {\r\n\t\t\tinsName = null;\r\n\t\t}\r\n\r\n\t\tlet targetFile = require.resolve(filename)\r\n\r\n\t\tconst cacheModule = require.cache[targetFile];\r\n\t\tif (cacheModule && require.main) {\r\n\t\t\tmodule.children.splice(module.children.indexOf(cacheModule), 1);\r\n\t\t\tcacheModule.children = [];\r\n\t\t}\r\n\t\t//以下API已弃用\r\n\t\t// const cacheModule = require.cache[targetFile];\r\n\t\t// if (cacheModule && cacheModule.parent) {\r\n\t\t// \tcacheModule.parent.children.splice(cacheModule.parent.children.indexOf(cacheModule), 1);\r\n\t\t// \tcacheModule.children = [];\r\n\t\t// }\r\n\r\n\t\trequire.cache[targetFile] = null;\r\n\t\tdelete require.cache[targetFile]\r\n\r\n\t\t// const code: any = await HotReload.loadHandler(targetFile, insName, ins);\r\n\r\n\t\tconsole.log(app.serverInfo.serverName, \"热重载代码文件：\", targetFile);\r\n\t}\r\n\r\n}\r\n\r\n\r\n"]}