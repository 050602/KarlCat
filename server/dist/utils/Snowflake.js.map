{"version":3,"file":"Snowflake.js","sourceRoot":"","sources":["../../src/utils/Snowflake.ts"],"names":[],"mappings":"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","sourcesContent":["import { DateUtils } from \"./DateUtils\";\r\n\r\n \r\nexport const randomLenNum = ():BigInt => {\r\n    return tempSnowflake.getId()\r\n  }\r\n  export const Snowflake = /** @class */ (function() {\r\n    function Snowflake(_workerId, _dataCenterId, _sequence) {\r\n        this.twepoch = 1288834974657n;\r\n        //this.twepoch = 0n;\r\n        this.workerIdBits = 5n;\r\n        this.dataCenterIdBits = 5n;\r\n        this.maxWrokerId = -1n ^ (-1n << this.workerIdBits); // 值为：31\r\n        this.maxDataCenterId = -1n ^ (-1n << this.dataCenterIdBits); // 值为：31\r\n        this.sequenceBits = 12n;\r\n        this.workerIdShift = this.sequenceBits; // 值为：12\r\n        this.dataCenterIdShift = this.sequenceBits + this.workerIdBits; // 值为：17\r\n        this.timestampLeftShift = this.sequenceBits + this.workerIdBits + this.dataCenterIdBits; // 值为：22\r\n        this.sequenceMask = -1n ^ (-1n << this.sequenceBits); // 值为：4095\r\n        this.lastTimestamp = -1n;\r\n        //设置默认值,从环境变量取\r\n        this.workerId = 1n;\r\n        this.dataCenterId = 1n;\r\n        this.sequence = 0n;\r\n        if (this.workerId > this.maxWrokerId || this.workerId < 0) {\r\n           console.error('_workerId must max than 0 and small than maxWrokerId-[' + this.maxWrokerId + ']');\r\n        }\r\n        if (this.dataCenterId > this.maxDataCenterId || this.dataCenterId < 0) {\r\n            console.error('_dataCenterId must max than 0 and small than maxDataCenterId-[' + this.maxDataCenterId + ']');\r\n        }\r\n   \r\n        this.workerId = BigInt(_workerId);\r\n        this.dataCenterId = BigInt(_dataCenterId);\r\n        this.sequence = BigInt(_sequence);\r\n    }\r\n    Snowflake.prototype.tilNextMillis = function(lastTimestamp) {\r\n        var timestamp = this.timeGen();\r\n        while (timestamp <= lastTimestamp) {\r\n            timestamp = this.timeGen();\r\n        }\r\n        return BigInt(timestamp);\r\n    };\r\n    Snowflake.prototype.timeGen = function() {\r\n        return BigInt(DateUtils.timestamp());\r\n    };\r\n    Snowflake.prototype.nextId = function() {\r\n        var timestamp = this.timeGen();\r\n        if (timestamp < this.lastTimestamp) {\r\n            console.error('Clock moved backwards. Refusing to generate id for ' +\r\n                (this.lastTimestamp - timestamp));\r\n        }\r\n        if (this.lastTimestamp === timestamp) {\r\n            this.sequence = (this.sequence + 1n) & this.sequenceMask;\r\n            if (this.sequence === 0n) {\r\n                timestamp = this.tilNextMillis(this.lastTimestamp);\r\n            }\r\n        } else {\r\n            this.sequence = 0n;\r\n        }\r\n        this.lastTimestamp = timestamp;\r\n        return ((timestamp - this.twepoch) << this.timestampLeftShift) |\r\n            (this.dataCenterId << this.dataCenterIdShift) |\r\n            (this.workerId << this.workerIdShift) |\r\n            this.sequence;\r\n    };\r\n    Snowflake.prototype.getId = function() {\r\n      var timestamp = this.timeGen();\r\n      if (timestamp < this.lastTimestamp) {\r\n        console.error('Clock moved backwards. Refusing to generate id for ' +\r\n              (this.lastTimestamp - timestamp));\r\n      }\r\n      if (this.lastTimestamp === timestamp) {\r\n          this.sequence = (this.sequence + 1n) & this.sequenceMask;\r\n          if (this.sequence === 0n) {\r\n              timestamp = this.tilNextMillis(this.lastTimestamp);\r\n          }\r\n      } else {\r\n          this.sequence = 0n;\r\n      }\r\n      this.lastTimestamp = timestamp;\r\n      let id = ((timestamp - this.twepoch) << this.timestampLeftShift) |\r\n      (this.dataCenterId << this.dataCenterIdShift) |\r\n      (this.workerId << this.workerIdShift) |\r\n      this.sequence;\r\n      return BigInt(id).toString()\r\n    };\r\n    return Snowflake;\r\n  }());\r\n   \r\n  var tempSnowflake = new Snowflake(1n, 1n, 0n);"]}