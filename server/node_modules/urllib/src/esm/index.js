import { HttpClient, HEADER_USER_AGENT } from './HttpClient.js';
let httpclient;
export async function request(url, options) {
    if (!httpclient) {
        if (options === null || options === void 0 ? void 0 : options.socketPath) {
            httpclient = new HttpClient({
                connect: { socketPath: options.socketPath },
            });
        }
        else {
            httpclient = new HttpClient({});
        }
    }
    return await httpclient.request(url, options);
}
export { HttpClient, HEADER_USER_AGENT as USER_AGENT } from './HttpClient.js';
export { MockAgent, ProxyAgent, Agent, Dispatcher, setGlobalDispatcher, getGlobalDispatcher, } from 'undici';
export default {
    request,
    USER_AGENT: HEADER_USER_AGENT,
};
//# sourceMappingURL=index.js.map